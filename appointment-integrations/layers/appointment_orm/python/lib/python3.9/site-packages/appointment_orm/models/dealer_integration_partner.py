"""Dealer Integration Partner Model."""

from sqlalchemy import Boolean, Column, DateTime, ForeignKey, Integer, String
from sqlalchemy.orm import backref, relationship
from typing import Dict, Any
from sqlalchemy.dialects.postgresql import JSONB
from sqlalchemy.ext.mutable import MutableDict
from appointment_orm.session_config import BaseForModels



class DealerIntegrationPartner(BaseForModels):  # type: ignore
    """Dealer Integration Partner Model."""

    __tablename__ = "appt_dealer_integration_partner"

    id = Column(Integer, primary_key=True, autoincrement=True)
    integration_partner_id = Column(Integer, ForeignKey("appt_integration_partner.id"))
    integration_dealer_id = Column(String)
    dealer_id = Column(Integer, ForeignKey("appt_dealer.id"))
    product_id = Column(Integer, ForeignKey("appt_product.id"))
    is_active = Column(Boolean, default=True)
    db_update_role = Column(String)
    db_creation_date = Column(DateTime)
    db_update_date = Column(DateTime)

    def as_dict(self) -> Dict[str, Any]:
        """Return attributes of the keys in the table."""
        return {
            key.name: getattr(self, key.name)
            for key in self.__table__.columns
        }
