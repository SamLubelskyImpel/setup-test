name: Ruff - Linting
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Or a sufficient number like 2, 5, etc.
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff
    - name: Analysing the code with ruff
      run: |
        echo "GITHUB_REF: ${{ github.ref }}"
        echo "GITHUB_SHA: ${{ github.sha }}"

        # Fetch the master branch explicitly to ensure it's available
        git fetch origin master:master || true

        # Get the merge-base with master
        BASE_COMMIT=$(git merge-base master HEAD)
        echo "Calculated merge-base as BASE_COMMIT: $BASE_COMMIT"

        if [ -z "$BASE_COMMIT" ]; then
          # Fallback if merge-base fails (e.g., first commit on branch)
          echo "Could not determine merge-base, comparing against root commit or all files."
          BASE_COMMIT=$(git rev-list --max-parents=0 HEAD)
          if [ -z "$BASE_COMMIT" ]; then
            # If no root commit found (very unlikely), check all files
            echo "No root commit found, checking all Python files."
            FILES_TO_CHECK=$(find . -name "*.py" -print0 | xargs -0)
          else
            echo "Comparing against root commit: $BASE_COMMIT"
            FILES_TO_CHECK=$(git diff --name-only "$BASE_COMMIT" "${{ github.sha }}" -- '*.py')
          fi
        else
          echo "Comparing changes between $BASE_COMMIT and ${{ github.sha }}"
          FILES_TO_CHECK=$(git diff --name-only "$BASE_COMMIT" "${{ github.sha }}" -- '*.py')
        fi

        echo "Files to be checked by Ruff: $FILES_TO_CHECK"

        if [ -z "$FILES_TO_CHECK" ]; then
          echo "No Python files changed or no files found for comparison, skipping Ruff check."
        else
          ruff check $FILES_TO_CHECK
        fi
