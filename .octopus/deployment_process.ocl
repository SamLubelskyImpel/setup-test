step "run-deploy-script" {
    name = "Run deploy Script"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.GitRepository.Source = "Project"
            Octopus.Action.Script.ScriptFileName = "#{Octopus.Project.Git.BasePath}/scripts/deploy_release.sh"
            Octopus.Action.Script.ScriptSource = "GitRepository"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-ubuntu"
    }
}

step "run-an-aws-cli-script" {
    name = "Run an AWS CLI Script"

    action {
        action_type = "Octopus.AwsRunScript"
        is_disabled = true
        properties = {
            Octopus.Action.Aws.AssumedRoleArn = "arn:aws:iam::143813444726:role/dev"
            Octopus.Action.Aws.AssumedRoleSession = "unified-test"
            Octopus.Action.Aws.AssumeRole = "True"
            Octopus.Action.Aws.Region = "us-east-1"
            Octopus.Action.AwsAccount.UseInstanceRole = "False"
            Octopus.Action.AwsAccount.Variable = "test-deploy"
            Octopus.Action.GitRepository.Source = "Project"
            Octopus.Action.Script.ScriptFileName = "#{Octopus.Project.Git.BasePath}/scripts/deploy_release.sh"
            Octopus.Action.Script.ScriptSource = "GitRepository"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-ubuntu"

        container {
            feed = "aws-sam-python-build"
            image = "sam/build-python3.9:latest"
        }
    }
}

step "deploy-an-aws-cloudformation-template" {
    name = "Deploy an AWS CloudFormation template"

    action {
        action_type = "Octopus.AwsRunCloudFormation"
        is_disabled = true
        properties = {
            Octopus.Action.AutoRetry.MaximumCount = "0"
            Octopus.Action.Aws.AssumedRoleArn = "arn:aws:iam::143813444726:role/dev"
            Octopus.Action.Aws.AssumedRoleSession = "unified-test"
            Octopus.Action.Aws.AssumeRole = "True"
            Octopus.Action.Aws.CloudFormation.ChangeSet.Defer = "True"
            Octopus.Action.Aws.CloudFormation.ChangeSet.GenerateName = "True"
            Octopus.Action.Aws.CloudFormation.RoleArn = "arn:aws:iam::143813444726:role/cfn-deployer-universal-integration"
            Octopus.Action.Aws.CloudFormationStackName = "dealerpeak-crm-integration-test"
            Octopus.Action.Aws.CloudFormationTemplate = "crm/crm-integrations/dealerpeak/template.yaml"
            Octopus.Action.Aws.CloudFormationTemplateParametersRaw = ".octopus/parameters.json"
            Octopus.Action.Aws.IamCapabilities = "[\"CAPABILITY_AUTO_EXPAND\",\"CAPABILITY_NAMED_IAM\",\"CAPABILITY_IAM\"]"
            Octopus.Action.Aws.Region = "us-east-1"
            Octopus.Action.Aws.TemplateSource = "GitRepository"
            Octopus.Action.Aws.WaitForCompletion = "True"
            Octopus.Action.AwsAccount.UseInstanceRole = "False"
            Octopus.Action.AwsAccount.Variable = "test-deploy"
            Octopus.Action.EnabledFeatures = "Octopus.Features.CloudFormation.ChangeSet.Feature"
            Octopus.Action.GitRepository.Source = "Project"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "crm/crm-integrations/dealerpeak/template.yaml, .octopus/parameters.json"
        }
        worker_pool = "hosted-windows"
    }
}

step "run-a-script" {
    name = "Run a Script"

    action {
        action_type = "Octopus.Script"
        is_disabled = true
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                echo "ChangesetId: #{Octopus.Action[Deploy an AWS CloudFormation template].Output.AwsOutputs[ChangesetId]}"
                echo "StackId: #{Octopus.Action[Deploy an AWS CloudFormation template].Output.AwsOutputs[StackId]}"
                echo "ChangeCount: #{Octopus.Action[Deploy an AWS CloudFormation template].Output.AwsOutputs[ChangeCount]}"
                echo "Changes: #{Octopus.Action[Deploy an AWS CloudFormation template].Output.AwsOutputs[Changes]}"
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-ubuntu"
    }
}

step "apply-an-aws-cloudformation-change-set" {
    name = "Apply an AWS CloudFormation Change Set"

    action {
        action_type = "Octopus.AwsApplyCloudFormationChangeSet"
        is_disabled = true
        properties = {
            Octopus.Action.Aws.AssumedRoleArn = "arn:aws:iam::143813444726:role/dev"
            Octopus.Action.Aws.AssumedRoleSession = "unified-test"
            Octopus.Action.Aws.AssumeRole = "True"
            Octopus.Action.Aws.CloudFormation.ChangeSet.Arn = "#{Octopus.Action[Deploy an AWS CloudFormation template].Output.AwsOutputs[ChangesetId]}"
            Octopus.Action.Aws.CloudFormationStackName = "dealerpeak-crm-integration-test"
            Octopus.Action.Aws.Region = "us-east-1"
            Octopus.Action.Aws.WaitForCompletion = "True"
            Octopus.Action.AwsAccount.UseInstanceRole = "False"
            Octopus.Action.AwsAccount.Variable = "test-deploy"
        }
        worker_pool = "hosted-windows"
    }
}