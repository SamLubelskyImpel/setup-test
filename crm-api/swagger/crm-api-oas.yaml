openapi: 3.0.0
info:
  title: CRM API
  version: 1.0.0
  description: "All API requests must be made over HTTPS. Calls made over plain HTTP will be redirected to HTTPS.
  This API allows Impel DA (Sales AI/Chat AI) to interact with the shared CRM layer, enabling actions such as posting or updating new leads, retrieving lead details, updating consumer infor  mation, and adding new activities.\n\n**Glossary:**\n1. 
    Impel CRM Layer: A unified persistence data layer designed for integration with all CRM partners. This layer aggregates all leads and activities from every CRM partner into one central repository.\n2. 
    Lead: A sales opportunity that a dealership can pursue. Every lead contains information about the consumer, a vehicle of interest, sales team information and other details.\n3.
    Consumer: A person who may be interested in buying a specific vehicle(s). The Consumer stores the personal information and preferences of its subject. A Consumer may be referenced in one or more Leads.\n4.
    Salesperson: An individual representing the dealership, responsible for managing and converting leads into sales. Each lead is typically associated with a designated salesperson who oversees the sales process for that specific lead.\n5.
    Activity: Actions, interactions, or events associated with a lead. Activities provide insights into the progress and status of a lead and can include notes, appointments, outbound calls, etc."
servers:
  - description: Impel test environment
    url: https://crm-api-stage.testenv.impel.io/
paths:
  /leads:
    post:
      operationId: post-lead
      summary: This endpoint creates a record for a Lead in the CRM persistance data layer.
      #{{CREATE_LEAD_LAMBDA_INFO}}
      tags:
        - Leads
      responses:
        '201':
          "$ref": "#/components/responses/201"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '404':
          description: Not Found. The lead_id or consumer_id of the request didn't match any existing records on Impel.
        '500':
          "$ref": "#/components/responses/500"
      parameters:
      - "$ref": "#/components/parameters/partnerId"
      - "$ref": "#/components/parameters/xApiKey"
      requestBody:
        description: "Please click on \"Schema\" next to \"Example Value\" below to view the detailed description of JSON properties in the request body."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
    get:
      operationId: get-leads
      summary: Retrieve a list of all leads for a given dealer id.
      #{{RETRIEVE_LEADS_LAMBDA_INFO}}
      tags:
        - Leads
      responses:
        '200':
          description: Success. The request was received and successfully processed by the CRM persistance data layer.
          content:
            application/json:
              schema:
                type: object
                properties:
                  leads:
                    type: array
                    description: A list of all leads for a given partner id and dealer id.
                    items:
                      type: object
                      properties:
                        lead_id:
                          type: integer
                          description: The ID of the lead
                          example: "123456"
                        consumer_id:
                          type: integer
                          description: Consumer ID
                          example: "123"
                        lead_status:
                          type: string
                          description: A status that can be used to group leads that are in similar state
                          example: "ACTIVE"
                        lead_substatus:
                          type: string
                          description: Current state of the lead
                          example: "Appointment Set"
                        lead_comment:
                          type: string
                          description: Comment about the lead or generated text from the source on behalf of the lead
                          example: "Does this car have a sunroof?"
                        lead_origin:
                          type: string
                          description: The first point of contact or channel through which the lead is generated
                          example: "INTERNET"
                        lead_source:
                          type: string
                          description: The specific channel through which the lead was generated
                          example: cars.com
                        vehicles_of_interest:
                          $ref: '#/components/schemas/VehiclesOfInterest'
                  pagination:
                    type: object
                    description: Information related to pagination.
                    properties:
                      records_on_page:
                        type: integer
                        description: The number of records on the page.
                        example: 1
                      total_records:
                        type: integer
                        description: Total records available for request.
                        example: 1
                      total_pages:
                        type: integer
                        description: Total pages available with records.
                        example: 1
                      current_page:
                        type: integer
                        description: The current page number.
                        example: 1
        '400':
          "$ref": "#/components/responses/400"
        '500':
          "$ref": "#/components/responses/500"
      parameters:
        - "$ref": "#/components/parameters/partnerId"
        - "$ref": "#/components/parameters/xApiKey"
        - "$ref": '#/components/parameters/dbCreationDateStart'
        - "$ref": '#/components/parameters/dbCreationDateEnd'
        - name: dealer_id
          in: query
          description: The ID assigned to the dealership by Impel during onboarding.
          required: false
          schema:
            type: string
        - "$ref": '#/components/parameters/page'
        - "$ref": '#/components/parameters/resultCount'
  /leads/{lead_id}:
    get:
      operationId: get-lead
      summary: Retrieve a specific lead by ID
      #{{RETRIEVE_LEAD_LAMBDA_INFO}}
      tags:
        - Leads
      parameters:
        - "$ref": "#/components/parameters/partnerId"
        - "$ref": "#/components/parameters/xApiKey"
        - "$ref": "#/components/parameters/leadId"
      responses:
        '200':
          description: Success. The request was received and successfully processed by the CRM persistance data layer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
        '400':
          "$ref": "#/components/responses/400"
        '404':
          "$ref": "#/components/responses/404"
        '500':
          "$ref": "#/components/responses/500"
    put:
      summary: This endpoint updates an existing lead in the CRM persistance data layer. The existing vehicles in the 'vehicles_of_interest' array won't be modified. Instead, new vehicles will be added to the array.
      #{{UPDATE_LEAD_LAMBDA_INFO}}
      tags:
        - Leads
      operationId: put-lead
      responses:
        '200':
          description: Success. The request was received and successfully processed by the CRM persistance data layer.
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '404':
          description: Not Found. The lead_id or consumer_id of the request didn't match any existing records on Impel.
        '500':
          "$ref": "#/components/responses/500"
      parameters:
      - "$ref": "#/components/parameters/partnerId"
      - "$ref": "#/components/parameters/xApiKey"
      - "$ref": "#/components/parameters/leadId"
      requestBody:
        description: Updated details of the lead
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead' 
              
  /leads/{lead_id}/status:
    get:
      summary: Retrieve the current status of a specific lead.
      #{{RETRIEVE_LEAD_STATUS_LAMBDA_INFO}}
      tags:
        - Leads
      parameters:
        - "$ref": "#/components/parameters/partnerId"
        - "$ref": "#/components/parameters/xApiKey"
        - "$ref": "#/components/parameters/leadId"
      responses:
        '200':
          description: Success. The request was received and successfully processed bythe CRM persistance data layer.
          content:
            application/json:
              schema:
                type: object
                properties:
                  lead_status:
                    type: string
                    description: The status of the lead
                    enum:
                      - ACTIVE
                      - BAD
                      - DUPLICATE
                      - LOST
                      - BOOKED
                      - INACTIVE
                      - CLOSED
                    example: "ACTIVE"
        '400':
          "$ref": "#/components/responses/400"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
        '500':
          "$ref": "#/components/responses/500"

  /leads/{lead_id}/salespersons:
    get:
      summary: Get an array of salespersons assigned to a lead, with the primary salesperson listed first.
      #{{RETRIEVE_SALESPERSONS_DATA_LAMBDA_INFO}}
      tags:
        - Leads
      parameters:
        - "$ref": "#/components/parameters/partnerId"
        - "$ref": "#/components/parameters/xApiKey"
        - "$ref": "#/components/parameters/leadId"
      responses:
        '200':
          description: Success. The request was received and successfully processed by the CRM persistance data layer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Salesperson' 
        '400':
          "$ref": "#/components/responses/400"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          description: Not Found. The lead_id of the request didn't match any existing records on Impel, or the lead does not have an associated salesperson.
        '500':
          "$ref": "#/components/responses/500"
          
  /consumers:
    post:
      summary: This endpoint creates a record for a Consumer in the CRM persistance data layer.
      #{{CREATE_CONSUMER_LAMBDA_INFO}}
      tags:
        - Consumers
      operationId: post-consumer
      parameters:
        - "$ref": "#/components/parameters/partnerId"
        - "$ref": "#/components/parameters/xApiKey"
        - "$ref": "#/components/parameters/dealerId"
      requestBody:
        description: "Please click on \"Schema\" next to \"Example Value\" below to view the detailed description of JSON properties in the request body."
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Consumer'
                - required:
                    - first_name
                    - last_name
                    - email
      responses:
        '201':
          description: Consumer successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  consumer_id:
                    type: integer
                    description: ID of the newly created consumer
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '404':
          description: Not Found. The dealer_id of the request didn't match any existing records on Impel.
        '500':
          "$ref": "#/components/responses/500"

  /consumers/{consumer_id}:
    get:
      summary: Get consumer by ID
      #{{RETRIEVE_CONSUMER_LAMBDA_INFO}}
      tags:
        - Consumers
      operationId: get-customer
      description: Returns a consumer by their ID.
      parameters:
        - "$ref": "#/components/parameters/partnerId"
        - "$ref": "#/components/parameters/xApiKey"
        - "$ref": "#/components/parameters/consumerId"
      responses:
        '200':
          description: Success. The request was received and successfully processed by the CRM persistance data layer.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      dealer_id:
                        type: string
                        description: The ID assigned to the dealership by Impel during onboarding.
                        example: 8806
                  - $ref: '#/components/schemas/Consumer'
        '400':
          "$ref": "#/components/responses/400"
        '404':
          description: Not Found. The consumer_id of the request didn't match any existing records on Impel.
        '500':
          "$ref": "#/components/responses/500"
    put:
      summary: This endpoint updates an existing consumer in the CRM persistance data layer.
      #{{UPDATE_CONSUMER_LAMBDA_INFO}}
      tags:
        - Consumers
      operationId: put-consumer
      responses:
        '200':
          description: Success. The request was received and successfully processed by the CRM persistance data layer.
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '404':
          description: Not Found. The consumer_id of the request didn't match any existing records on Impel.
        '500':
          "$ref": "#/components/responses/500"
      parameters:
      - "$ref": "#/components/parameters/partnerId"
      - "$ref": "#/components/parameters/xApiKey"
      - "$ref": "#/components/parameters/consumerId"
      requestBody:
        description: Updated details of the consumer
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consumer' 
  
  /activities/{lead_id}:
    post:
      summary: This endpoint allows for the creation of a new activity associated with a specific lead in the CRM persistence layer. The "activity_type" and "activity_requested_ts" fields are required for all activities. For activities needing scheduling or completion by a specific date and time, the "activity_due_ts" is essential. Additionally, when the activity_type is set to "note", the notes field becomes mandatory.
      #{{CREATE_ACTIVITY_LAMBDA_INFO}}
      tags:
        - Activities
      parameters:
        - "$ref": "#/components/parameters/partnerId"
        - "$ref": "#/components/parameters/xApiKey"
        - "$ref": "#/components/parameters/leadId"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - activity_type
                - activity_requested_ts
              properties:
                activity_type:
                  type: string
                  description: Type of activity
                  enum:
                    - outbound_call
                    - appointment
                    - note
                    - phone_call_task
                  example: "note"
                activity_due_ts:
                  type: string
                  format: date-time
                  description: Timestamp in UTC format indicating when the activity is to take place. This should be provided when an activity needs to be scheduled or completed by a specific date and time, such as an appointment or phone_call_task.
                  example: "2023-09-22T14:00:00Z"
                activity_requested_ts:
                  type: string
                  format: date-time
                  description: Timestamp in UTC format when the activity was requested. 
                  example: "2023-09-22T12:00:00Z"
                notes:
                  type: string
                  description: Notes about the activity. Required when the activity type is "note".
                  example: "Customer requested a follow-up call."
      responses:
        '201':
          description: Activity successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity_id:
                    type: integer
                    description: ID of the newly created activity
        '400':
          "$ref": "#/components/responses/400"
        '404':
          "$ref": "#/components/responses/404"
  /upload:
    post:
      summary: This endpoint is designated for internal operations, specifically for uploading standardized, transformed data into the CRM API database.
      #{{UPLOAD_DATA_LAMBDA_INFO}}
      tags:
        - Upload
      parameters:
        - "$ref": "#/components/parameters/partnerId"
        - "$ref": "#/components/parameters/xApiKey"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  dealer_product_id:
                    type: string
                    description: Dealer ID assigned during onboarding
                    example: test_dealer
                  lead:
                    $ref: '#/components/schemas/Lead'
                  consumer:
                    $ref: '#/components/schemas/Consumer'
                  salesperson:
                    $ref: '#/components/schemas/Salesperson'
components:
  schemas:
    VehiclesOfInterest:
      description: An array of vehicles the lead was interested in
      type: array
      items:
        description: Object containing description of the vehicle
        type: object
        properties:
          vin:
            type: string
            description: Vehicle Identification Number
            minLength: 1
            maxLength: 17
            example: "1HGBH41JXMN109186"
          type:
            type: string
            description: Type of the vehicle (e.g., Sedan, SUV, Truck)
            minLength: 1
            maxLength: 50
            example: SUV
          class:
            type: string
            description: Classification of the vehicle (e.g., Compact, Midsize, Luxury)
            minLength: 1
            maxLength: 50
            example: Compact
          mileage:
            type: number
            description: Mileage of the vehicle
            example: 50000
          year:
            type: number
            description: The sales model year of the vehicle
            minimum: 1800
            maximum: 3000
            example: 2023
          make:
            type: string
            description: The brand or make of the vehicle
            minLength: 1
            maxLength: 50
            example: Ford
          model:
            type: string
            description: The model name of the vehicle
            minLength: 1
            maxLength: 50
            example: F-150
          trim:
            type: string
            description: Trim of the vehicle
            minLength: 1
            maxLength: 50
            example: GT
          body_style:
            type: string
            description: Body style of the vehicle
            minLength: 1
            maxLength: 50
            example: SUV
          transmission:
            type: string
            description: Transmission of the vehicle
            minLength: 1
            maxLength: 50
            example: Manual
          interior_color:
            type: string
            description: Interior color of the vehicle
            minLength: 1
            maxLength: 50
            example: Black
          exterior_color:
            type: string
            description: Exterior color of the vehicle
            minLength: 1
            maxLength: 50
            example: White
          price:
            type: number
            format: float
            description: Price of the vehicle
            example: 25000.00
          status:
            type: string
            description: Current status of the vehicle (e.g., Available, Sold)
            minLength: 1
            maxLength: 50
            example: Available
          condition:
            type: string
            description: Condition of the vehicle
            enum: [New, Used]
            example: Used
          odometer_units:
            type: string
            description: Units for the odometer reading (e.g., miles, kilometers)
            enum: [miles, kilometers]
            example: miles
          vehicle_comments:
            type: string
            description: Comments about the vehicle
            minLength: 1
            maxLength: 2048
            example: Has a scratch
    Consumer:
      description: An object containing all information about a person interested in a vehicle
      type: object
      properties:
        first_name:
          type: string
          description: Consumer first name
          minLength: 1
          maxLength: 50
          example: John
        last_name:
          type: string
          description: Consumer last name
          minLength: 1
          maxLength: 50
          example: Doe
        middle_name:
          type: string
          description: Consumer middle name
          minLength: 1
          maxLength: 50
          example: Michael
        email:
          type: string
          format: email
          description: Consumer primary email address
          minLength: 1
          maxLength: 50
          example: john.doe@example.com
        phone:
          type: string
          description: Consumer primary phone number
          minLength: 1
          maxLength: 20
          example: "+11231231134"
        email_optin_flag:
          type: boolean
          description: Flag to indicate if the consumer has opted in for email
          default: true
          example: true
        sms_optin_flag:
          type: boolean
          description: Flag to indicate if the consumer has opted in for SMS notifications
          default: true
          example: true
        city:
          type: string
          description: City where the consumer resides
          minLength: 1
          maxLength: 100
          example: New York
        country:
          type: string
          description: Country where the consumer resides
          minLength: 1
          maxLength: 100
          example: USA
        address:
          type: string
          description: Complete address of the consumer
          minLength: 1
          maxLength: 255
          example: "123 Main St, Apt 4B"
        postal_code:
          type: string
          description: Postal or ZIP code for the consumer's address
          minLength: 1
          maxLength: 20
          example: "10001"
    Lead:
      description: An object containing all information about a lead
      type: object
      required:
        - consumer_id
        - lead_status
        - lead_substatus
        - lead_comment
        - lead_origin
        - lead_source
        - vehicles_of_interest
      properties:
        consumer_id:
          type: integer
          description: Unique identifier for the associated consumer
          example: 2
        lead_status:
          type: string
          description: A status that can be used to group leads that are in similar state
          minLength: 1
          maxLength: 50
          example: "ACTIVE"
        lead_substatus:
          type: string
          description: Current state of the lead
          minLength: 1
          maxLength: 50
          example: "Appointment Set"
        lead_comment:
          type: string
          description: Comment about the lead or generated text from the source on behalf of the lead
          minLength: 1
          maxLength: 2048
          example: "Does this car have a sunroof?"
        lead_origin:
          type: string
          description: The first point of contact or channel through which the lead is generated
          enum: [INTERNET, CALL, WALK-IN, OTHER]
          example: "INTERNET"
        lead_source:
          type: string
          description: The specific channel through which the lead was generated.
          minLength: 1
          maxLength: 2048
          example: cars.com
        vehicles_of_interest:
          $ref: '#/components/schemas/VehiclesOfInterest'
    Salesperson:
      description: An object containing all information about a salesperson
      type: object
      required:
        - crm_salesperson_id
        - first_name
        - last_name
        - email
        - phone
      properties:
        crm_salesperson_id:
          type: string
          description: The ID of th salesperson in the CRM
          example: "123abc-1234ab-123abc"
        first_name:
          type: string
          description: First name of the salesperson
          example: "John"
        last_name:
          type: string
          description: Last name of the salesperson
          example: "Smith"
        email:
          type: string
          description: Email address of the salesperson
          example: "john.smith@example.com"
        phone:
          type: string
          description: Phone number of the salesperson
          example: "123-456-7890"
        position_name:
          type: string
          description: Salesperson position or role
          example: "Sales Manager"
        is_primary:
          type: boolean
          description: "Indicates whether the salesperson is the primary contact"
  responses:
    '201':
      description: Lead successfully created
      content:
        application/json:
          schema:
            type: object
            properties:
              lead_id:
                type: integer
                description: ID of the lead that was created.
    '400':
      description: This indicates Bad Request. For example this error can occur if
        a required property in the request JSON is missing.
    '401':
      description: This request is unauthorized. The authorization credentials are
        missing or are wrong. For example if the partner_id or the x_api_key provided
        in the header are wrong/missing. This error can also occur if the dealer_id
        provided hasn't been configured with Impel.
    '403':
      description: Unauthorized. This indicates that the authorization token provided
        is invalid or has expired.
    '404':
      description: Not Found. The lead_id of the request didn't match any existing records on Impel.
    '409':
      description: Conflict. Lead record couldn't be created due to a conflict with an existing record with the same lead_id on Impel.
    '500':
      description: Internal Server Error. Please contact Impel support.
  
  parameters:
    partnerId:
      name: partner_id
      in: header
      description: This parameter uniquely identifies an Impel partner and will be used for API authentication and authorization.
      required: true
      schema:
        type: string
    xApiKey:
      name: x_api_key
      in: header
      description: An API Key provided by CE team that will be used for API authentication and authorization.
      required: true
      schema:
        type: string
    dealerId:
      name: dealer_id
      in: header
      description: The ID assigned to the dealership by Impel during onboarding.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 50
        example: 8806
    integrationPartnerId:
      name: integration_partner_id
      in: query
      description: An Integration Partner ID.
      required: true
      schema:
        type: integer
    leadId:
      name: lead_id
      in: path
      required: true
      description: Impel Lead ID for which details are to be retrieved or updated.
      schema:
        type: integer
    consumerId:
      name: consumer_id
      in: path
      required: true
      description: ID of the consumer
      schema:
        type: integer
    dbCreationDateStart:
      name: db_creation_date_start
      in: query
      required: true
      description: Specifies the earliest 'db_creation_date' in UTC format to include in the query for created leads.
      schema:
        type: string
        format: date-time
        example: 2023-05-25T06:35:34
    dbCreationDateEnd:
      name: db_creation_date_end
      in: query
      required: true
      description: Specifies the latest 'db_creation_date' in UTC format to include in the query for created leads.      
      schema:
        type: string
        format: date-time
        example: 2023-05-25T06:35:34
    page:
      name: page
      in: query
      required: false
      description:  The results page to retrieve, starts at 1.
      schema:
        type: integer
        minimum: 1
    resultCount:
      name: result_count
      in: query
      required: false
      description: The number of results per page to return.
      schema:
        type: integer
        minimum: 1
        maximum: 1000