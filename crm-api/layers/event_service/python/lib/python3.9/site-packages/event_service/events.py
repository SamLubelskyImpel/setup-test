from datetime import datetime, timezone
import logging
from os import environ
from enum import Enum

from event_service.event_bus import send_event, generate_event_id


logger = logging.getLogger()
logger.setLevel(environ.get("LOGLEVEL", "INFO").upper())

class Event(Enum):
    Created = 'created'
    Updated = 'updated'

class Resource(Enum):
    Lead = 'lead'
    Activity = 'activity'


def dispatch_event(request_product: str, partner: str, event: Event, content: object, resource: Resource):
    try:
        event_type = f'integrations.crm.{"chatai" if request_product == "chat_ai" else "salesai"}.{resource.value}.{event.value}'
        product_name = 'CHAT_AI' if request_product == 'chat_ai' else 'SALES_AI'
        send_event('com.impel.crm-api', {
            'events': [
                {
                    'event_id': generate_event_id(),
                    'event_type': event_type,
                    'client_id': partner,
                    'product_name': product_name,
                    'event_content': {
                        **content,
                        'created_ts': datetime.now(timezone.utc).isoformat(),
                    }
                }
            ]
        })
    except:
        logger.exception('Failed to dispatch WBNS event')
