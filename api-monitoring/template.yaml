AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: universal integrations

Parameters:
  Environment:
    Description: The name of the runtime environment
    Type: String
    AllowedPattern: '^[a-zA-z0-9-]+$'
    ConstraintDescription: Must contain only lowercase, uppercase, numbers, or hyphens

  DomainSuffix:
    Description: The domain suffix of the API Gateway
    Type: String
    AllowedPattern: '^[a-zA-z0-9-]+$|'
    ConstraintDescription: Must contain only lowercase, uppercase, numbers, or hyphens
    Default: ""

Conditions:
  IsProd:
    Fn::Equals:
    - Ref: AWS::AccountId
    - 196800776222
  IsUsEast1: !Equals [ !Ref 'AWS::Region', 'us-east-1' ]

Mappings:
  SslCertificates:
    us-east-1:
      '143813444726': 'arn:aws:acm:us-east-1:143813444726:certificate/9f026b43-c690-4434-93e1-9be4ef91f67d'
      '196800776222': 'arn:aws:acm:us-east-1:196800776222:certificate/4bad36e0-d971-41e6-a2d8-a897013012be'
  Subnets:
    us-east-1:
      '196800776222':
        - subnet-0d29a385efe83bf1c
        - subnet-0e88ecdd743701e96
        - subnet-00291e028e21cb78f
        - subnet-0b1555d5fa3c8ba8e
      '143813444726':
        - subnet-030d57e39ec0df603
        - subnet-01044d580678ea63c
        - subnet-0b29db0aeb6cdabec
        - subnet-0e28d592f2ca28fb7
  VpcId:
    us-east-1:
      '196800776222': vpc-03417e688cee5bc07
      '143813444726': vpc-0b28df8980a1905d5

Globals:
  Function:
    Runtime: python3.9
    Environment:
      Variables:
        AWS_ACCOUNT_ID: !Sub '${AWS::AccountId}'
        ENVIRONMENT: !Ref Environment
        LOGLEVEL: INFO
    VpcConfig:
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetIds: !FindInMap [ Subnets, !Ref 'AWS::Region', !Ref 'AWS::AccountId' ]

Resources:
  SecurityGroup:
      Type: AWS::EC2::SecurityGroup
      DeletionPolicy: Delete
      Properties:
        GroupDescription: Permit traffic from the unified DMS lambdas
        VpcId: !FindInMap [ VpcId, !Ref 'AWS::Region', !Ref 'AWS::AccountId']
        SecurityGroupEgress:
          - Description: AllowAll
            CidrIp: 0.0.0.0/0
            IpProtocol: '-1'
        Tags:
          - Key: Environment
            Value: !Ref Environment
  ApiPollingLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: api-monitoring.lambda_handler
      Runtime: python3.9
      Timeout: 120
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:ListBucket
              Resource:
                - !If [ IsProd,
                        !Sub "arn:aws:s3:::api-monitoring-${AWS::Region}-prod/*",
                        !Sub "arn:aws:s3:::api-monitoring-${AWS::Region}-test/*"
                ]
        - Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: arn:aws:sns:region:account-id:my-alert-topic
              

