AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Tekion DMS ETL

Parameters:
  Environment:
    Description: The name of the runtime environment
    Type: String
    AllowedPattern: '^[a-zA-z0-9-]+$'
    ConstraintDescription: Must contain only lowercase, uppercase, numbers, or hyphens

  DomainSuffix:
    Description: The domain suffix of the API Gateway
    Type: String
    AllowedPattern: '^[a-zA-z0-9-]+$|'
    ConstraintDescription: Must contain only lowercase, uppercase, numbers, or hyphens
    Default: ""

Conditions:
  IsProd:
    Fn::Equals:
    - Ref: AWS::AccountId
    - 196800776222
  IsUsEast1: !Equals [ !Ref 'AWS::Region', 'us-east-1' ]

Mappings:
  Subnets:
    us-east-1:
      '196800776222':
        - subnet-0d29a385efe83bf1c
        - subnet-0e88ecdd743701e96
        - subnet-00291e028e21cb78f
        - subnet-0b1555d5fa3c8ba8e
      '143813444726':
        - subnet-030d57e39ec0df603
        - subnet-01044d580678ea63c
        - subnet-0b29db0aeb6cdabec
        - subnet-0e28d592f2ca28fb7
  VpcId:
    us-east-1:
      '196800776222': vpc-03417e688cee5bc07
      '143813444726': vpc-0b28df8980a1905d5
  SslCertificates:
    us-east-1:
      '143813444726': 'arn:aws:acm:us-east-1:143813444726:certificate/9f026b43-c690-4434-93e1-9be4ef91f67d'
      '196800776222': 'arn:aws:acm:us-east-1:196800776222:certificate/4bad36e0-d971-41e6-a2d8-a897013012be'

Globals:
  Function:
    Runtime: python3.9
    Environment:
      Variables:
        AWS_ACCOUNT_ID: !Sub '${AWS::AccountId}'
        ENVIRONMENT: !Ref Environment
        IS_PROD: !If [ IsProd, 1, 0 ]
        LOGLEVEL: INFO
        CE_TOPIC: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
    VpcConfig:
      SecurityGroupIds:
        - !Ref TekionSecurityGroup
      SubnetIds: !FindInMap [ Subnets, !Ref 'AWS::Region', !Ref 'AWS::AccountId' ]

Resources:
  RepairOrderQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 3600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt RepairOrderDLQ.Arn
        maxReceiveCount: 5

  RepairOrderDLQ:
    Type: AWS::SQS::Queue

  DealsQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 3600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DealsDLQ.Arn
        maxReceiveCount: 5

  DealsDLQ:
    Type: AWS::SQS::Queue

  InvokeTekionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Invoke data pull for every Tekion dealer
      CodeUri: app/
      Handler: invoke_tekion.lambda_handler
      Timeout: 180
      Policies:
        - Id: FunctionPermissions
          Version: "2012-10-17"
          Statement:
            - Sid: AllowSQS
              Effect: Allow
              Action:
                - sqs:SendMessage
              Resource:
                - !GetAtt RepairOrderQueue.Arn
                - !GetAtt DealsQueue.Arn
            - Sid: AllowSecrets
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !If [ IsProd, 
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/DmsDataService*",
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/DmsDataService*",
                  ]
      Environment:
        Variables:
          Environment: !Ref Environment
          REPAIR_ORDER_QUEUE: !Ref RepairOrderQueue
          DEALS_QUEUE: !Ref DealsQueue
      Events:
        DailyInvoke:
          Type: Schedule
          Properties:
            Description: Start the daily data pull for each tekion dealer.
            Enabled: !If [ IsProd, true, false ]
            Schedule: cron(0 0 * * ? *)
            Input: '{"frequency": "daily"}'

  RepairOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Tekion Repair Order Data Pull
      CodeUri: app/
      Handler: repair_orders.lambda_handler
      Timeout: 900
      Policies:
        - Id: FunctionPermissions
          Version: "2012-10-17"
          Statement:
            - Sid: AllowSecrets
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !If [ IsProd, 
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/tekion*",
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:stage/tekion*",
                  ]
            - Sid: AllowS3
              Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
                - s3:ListBucket
                - s3:*Object
              Resource:
                - !If [ IsProd, 
                    !Sub "arn:aws:s3:::integrations-${AWS::Region}-prod/*",
                    !Sub "arn:aws:s3:::integrations-${AWS::Region}-test/*"
                  ]
            - Sid: AllowSNSPolicy
              Effect: Allow
              Action:
                - sns:Publish
              Resource:
                - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering"
            - Sid: AllowInvokeFunction
              Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource:
                - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:tekion-refresh-token-${Environment}"
      Environment:
        Variables:
          Environment: !Ref Environment
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Enabled: True
            Queue: !GetAtt RepairOrderQueue.Arn

  DealsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Tekion Deals Data Pull
      CodeUri: app/
      Handler: vehicle_sale.lambda_handler
      Timeout: 900
      Policies:
        - Id: FunctionPermissions
          Version: "2012-10-17"
          Statement:
            - Sid: AllowSecrets
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !If [ IsProd, 
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/tekion*",
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:stage/tekion*",
                  ]
            - Sid: AllowS3
              Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
                - s3:ListBucket
                - s3:*Object
              Resource:
                - !If [ IsProd, 
                    !Sub "arn:aws:s3:::integrations-${AWS::Region}-prod/*",
                    !Sub "arn:aws:s3:::integrations-${AWS::Region}-test/*"
                  ]
            - Sid: AllowSNSPolicy
              Effect: Allow
              Action:
                - sns:Publish
              Resource:
                - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering"
            - Sid: AllowInvokeFunction
              Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource:
                - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:tekion-refresh-token-${Environment}"
      Environment:
        Variables:
          Environment: !Ref Environment
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Enabled: True
            Queue: !GetAtt DealsQueue.Arn

  RepairOrderDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProd
    Properties:
      AlarmName: TekionRepairOrderDLQAlarm
      AlarmDescription: There are messages in the Tekion repair order DLQ
      ActionsEnabled: true
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering"
      Dimensions:
        - Name: QueueName
          Value: !GetAtt RepairOrderDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      TreatMissingData: notBreaching

  DealsDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProd
    Properties:
      AlarmName: TekionDealsDLQAlarm
      AlarmDescription: There are messages in the Tekion deals DLQ
      ActionsEnabled: true
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering"
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DealsDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      TreatMissingData: notBreaching

  RefreshTokenLambda:
    Type: AWS::Serverless::Function
    Properties:
      Description: Refresh Tekion token
      FunctionName: !Sub tekion-refresh-token-${Environment}
      CodeUri: app/
      Handler: refresh_token.lambda_handler
      ReservedConcurrentExecutions: 1
      Timeout: 30
      Policies:
        - Id: FunctionPermissions
          Version: "2012-10-17"
          Statement:
            - Sid: AllowSecrets
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !If [ IsProd, 
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/tekion*",
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:stage/tekion*",
                  ]
            - Sid: AllowS3
              Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
                - s3:ListBucket
                - s3:*Object
              Resource:
                - !If [ IsProd, 
                    !Sub "arn:aws:s3:::integrations-${AWS::Region}-prod/*",
                    !Sub "arn:aws:s3:::integrations-${AWS::Region}-test/*"
                  ]
