AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Write-back notification service

Parameters:
  Environment:
    Description: The name of the runtime environment
    Type: String
    AllowedPattern: "^[a-zA-z0-9-]+$"
    ConstraintDescription: Must contain only lowercase, uppercase, numbers, or hyphens

Conditions:
  IsProd:
    Fn::Equals:
      - Ref: AWS::AccountId
      - 196800776222
  IsUsEast1: !Equals [!Ref "AWS::Region", "us-east-1"]

Globals:
  Function:
    Runtime: python3.9
    Environment:
      Variables:
        AWS_ACCOUNT_ID: !Sub "${AWS::AccountId}"
        ENVIRONMENT: !Ref Environment
        LOGLEVEL: INFO

Resources:
  EventBus:
    Type: AWS::Events::EventBus
    Properties:
      DeadLetterConfig:
        Arn: !GetAtt EventBusDLQ.Arn
      Description: Event bus for the write-back notification service
      Name: !Sub wbns-bus-${Environment}

  EventBusDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "wbns-dlq-${Environment}"
      MessageRetentionPeriod: 604800
      VisibilityTimeout: 10

  MonitoringRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub wbns-monitoring-${Environment}
      EventPattern: '{"source":[{"prefix":""}]}'  # This matches any event sent to the event bus
      State: ENABLED
      EventBusName: !GetAtt EventBus.Name
      Targets:
        - Id: Lambda
          Arn: !GetAtt MonitoringLambda.Arn

  MonitoringInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref MonitoringLambda
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt MonitoringRule.Arn

  MonitoringLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "wbns-monitoring-${Environment}"
      CodeUri: app/
      Handler: monitoring.lambda_handler
