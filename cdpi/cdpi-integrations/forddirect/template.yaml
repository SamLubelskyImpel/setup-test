AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Ford Direct CDPI resources

Parameters:
  Environment:
    Description: The name of the runtime environment
    Type: String
    AllowedPattern: '^[a-zA-z0-9-]+$'
    ConstraintDescription: Must contain only lowercase, uppercase, numbers, or hyphens

Conditions:
  IsProd:
    Fn::Equals:
    - Ref: AWS::AccountId
    - 196800776222
  IsUsEast1: !Equals [ !Ref 'AWS::Region', 'us-east-1' ]


Mappings:
  Subnets:
    us-east-1:
      '196800776222':
        - subnet-0d29a385efe83bf1c
        - subnet-0e88ecdd743701e96
        - subnet-00291e028e21cb78f
        - subnet-0b1555d5fa3c8ba8e
      '143813444726':
        - subnet-030d57e39ec0df603
        - subnet-01044d580678ea63c
        - subnet-0b29db0aeb6cdabec
        - subnet-0e28d592f2ca28fb7
  VpcId:
    us-east-1:
      '196800776222': vpc-03417e688cee5bc07
      '143813444726': vpc-0b28df8980a1905d5
  SslCertificates:
    us-east-1:
      '143813444726': 'arn:aws:acm:us-east-1:143813444726:certificate/9f026b43-c690-4434-93e1-9be4ef91f67d'
      '196800776222': 'arn:aws:acm:us-east-1:196800776222:certificate/4bad36e0-d971-41e6-a2d8-a897013012be'

Globals:
  Function:
    Runtime: python3.9
    Environment:
      Variables:
        AWS_ACCOUNT_ID: !Sub '${AWS::AccountId}'
        ENVIRONMENT: !Ref Environment
        IS_PROD: !If [ IsProd, 1, 0 ]
        LOGLEVEL: INFO
    VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroup
        SubnetIds: !FindInMap [ Subnets, !Ref 'AWS::Region', !Ref 'AWS::AccountId' ]

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DeletionPolicy: Delete
    Properties:
      GroupDescription: Permit traffic from the forddirect cdpi integration
      VpcId: !FindInMap [ VpcId, !Ref 'AWS::Region', !Ref 'AWS::AccountId']
      SecurityGroupEgress:
        - Description: AllowAll
          CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Product
          Value: forddirect-cdpi-integration

  RDSInboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "cdpi forddirect integration rds access"
      GroupId: !If [ IsProd,
                      'sg-00e12bc4c116eb820',
                      'sg-00b911ee260ce5153'
                    ]
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !GetAtt SecurityGroup.GroupId

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:DescribeLogStreams"
                Resource: "arn:aws:logs:*:*:*"
        - PolicyName: AccessSecretsManager
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !If [
                      IsProd,
                      !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/DB/application*",
                      !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/DB/application*",
                    ]
        - PolicyName: LambdaVPCAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource: "*"
        - PolicyName: S3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                Resource:
                  - !If [
                      IsProd,
                      !Sub "arn:aws:s3:::cdpi-shared-${AWS::Region}-prod/fd-raw/consumer_profile_summary/*",
                      !Sub "arn:aws:s3:::cdpi-shared-${AWS::Region}-test/fd-raw/consumer_profile_summary/*"
                    ]
                  - !If [
                      IsProd,
                      !Sub "arn:aws:s3:::cdpi-shared-${AWS::Region}-prod/fd-processed/consumer_profile_summary/*",
                      !Sub "arn:aws:s3:::cdpi-shared-${AWS::Region}-test/fd-processed/consumer_profile_summary/*"
                    ]
        - PolicyName: SQSAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource:
                  - !GetAtt ConsumerSummaryQueue.Arn
                  - !GetAtt ConsumerSummaryBatcherQueue.Arn
        - PolicyName: SNSPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "sns:Publish"
                Resource:
                - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering'
  
  ConsumerSummaryBatcherLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "cdpi-ford-direct-${Environment}-ConsumerSummaryBatcher"
      Handler: consumer_summary_batcher.lambda_handler
      CodeUri: app/
      Role: !GetAtt LambdaRole.Arn
      MemorySize: 1024
      Timeout: 300
      Environment:
        Variables:
          BATCH_SIZE: 2

  ConsumerSummaryBatcherLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/cdpi-ford-direct-${Environment}-ConsumerSummaryBatcher"

  ConsumerSummaryBatcherQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "cdpi-ford-direct-${Environment}-ConsumerSummaryBatcher"
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 300
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ConsumerSummaryBatcherDeadLetterQueue.Arn
        maxReceiveCount: 1

  ConsumerSummaryBatcherDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "cdpi-ford-direct-${Environment}-ConsumerSummaryBatcherDLQ"
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 10

  ConsumerSummaryBatcherEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt ConsumerSummaryBatcherQueue.Arn
      MaximumBatchingWindowInSeconds: 0
      FunctionName: !GetAtt ConsumerSummaryBatcherLambda.Arn
  
  ConsumerSummaryBatcherQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref ConsumerSummaryBatcherQueue
      PolicyDocument:
          Version: '2012-10-17'
          Id: ConsumerSummaryBatcherQueuePolicy
          Statement:
            - Sid: Allow-SNS-SendMessage
              Action:
                - sqs:SendMessage
              Effect: Allow
              Resource: !GetAtt ConsumerSummaryBatcherQueue.Arn
              Principal:
                  Service: sns.amazonaws.com
              Condition:
                  ArnEquals:
                      aws:SourceArn: !If [
                        IsProd,
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-prod",
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-test"
                      ]
  
  ConsumerSummaryBatcherTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !If [
        IsProd,
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-prod",
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-test"
      ]
      Endpoint: !GetAtt ConsumerSummaryBatcherQueue.Arn
      FilterPolicyScope: MessageBody
      FilterPolicy:
        '{"Records":{"s3":{"object":{"key":[{"prefix":"fd-raw/consumer_profile_summary/"}]}},"eventName":[{"prefix":"ObjectCreated:"}]}}'

  ConsumerSummaryBatcherDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "cdpi-ford-direct-${Environment}-ConsumerSummaryBatcherDLQ"
      AlarmDescription: "Alarm for Consumer Summary Dead Letter Queue"
      ActionsEnabled: true
      Namespace: AWS/SQS
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value: !GetAtt ConsumerSummaryBatcherDeadLetterQueue.QueueName
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      TreatMissingData: notBreaching
  
  ConsumerSummaryLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "cdpi-ford-direct-${Environment}-ConsumerSummary"
      Handler: consumer_summary.lambda_handler
      CodeUri: app/
      Role: !GetAtt LambdaRole.Arn
      MemorySize: 1024
      Timeout: 60
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:1",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:6"
          ]
  
  ConsumerSummaryLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/cdpi-ford-direct-${Environment}-ConsumerSummary"
  
  ConsumerSummaryQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "cdpi-ford-direct-${Environment}-ConsumerSummary"
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 60
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ConsumerSummaryDeadLetterQueue.Arn
        maxReceiveCount: 2
  
  ConsumerSummaryDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "cdpi-ford-direct-${Environment}-ConsumerSummaryDLQ"
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 10
  
  ConsumerSummaryEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt ConsumerSummaryQueue.Arn
      MaximumBatchingWindowInSeconds: 0
      FunctionName: !GetAtt ConsumerSummaryLambda.Arn

  ConsumerSummaryQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref ConsumerSummaryQueue
      PolicyDocument:
          Version: '2012-10-17'
          Id: ConsumerSummaryQueuePolicy
          Statement:
            - Sid: Allow-SNS-SendMessage
              Action:
                - sqs:SendMessage
              Effect: Allow
              Resource: !GetAtt ConsumerSummaryQueue.Arn
              Principal:
                  Service: sns.amazonaws.com
              Condition:
                  ArnEquals:
                      aws:SourceArn: !If [
                        IsProd,
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-prod",
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-test"
                      ]
  
  ConsumerSummaryTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !If [
        IsProd,
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-prod",
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-test"
      ]
      Endpoint: !GetAtt ConsumerSummaryQueue.Arn
      FilterPolicyScope: MessageBody
      FilterPolicy:
        '{"Records":{"s3":{"object":{"key":[{"prefix":"fd-processed/consumer_profile_summary/"}]}},"eventName":[{"prefix":"ObjectCreated:"}]}}'

  ConsumerSummaryDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "cdpi-ford-direct-${Environment}-ConsumerSummaryDLQ"
      AlarmDescription: "Alarm for Consumer Summarys Dead Letter Queue"
      ActionsEnabled: true
      Namespace: AWS/SQS
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value: !GetAtt ConsumerSummaryDeadLetterQueue.QueueName
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      TreatMissingData: notBreaching
