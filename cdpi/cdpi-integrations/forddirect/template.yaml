AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Ford Direct CDPI resources

Parameters:
  Environment:
    Description: The name of the runtime environment
    Type: String
    AllowedPattern: '^[a-zA-z0-9-]+$'
    ConstraintDescription: Must contain only lowercase, uppercase, numbers, or hyphens

Conditions:
  IsProd:
    Fn::Equals:
    - Ref: AWS::AccountId
    - 196800776222
  IsUsEast1: !Equals [ !Ref 'AWS::Region', 'us-east-1' ]


Mappings:
  Subnets:
    us-east-1:
      '196800776222':
        - subnet-0d29a385efe83bf1c
        - subnet-0e88ecdd743701e96
        - subnet-00291e028e21cb78f
        - subnet-0b1555d5fa3c8ba8e
      '143813444726':
        - subnet-030d57e39ec0df603
        - subnet-01044d580678ea63c
        - subnet-0b29db0aeb6cdabec
        - subnet-0e28d592f2ca28fb7
  VpcId:
    us-east-1:
      '196800776222': vpc-03417e688cee5bc07
      '143813444726': vpc-0b28df8980a1905d5
  SslCertificates:
    us-east-1:
      '143813444726': 'arn:aws:acm:us-east-1:143813444726:certificate/9f026b43-c690-4434-93e1-9be4ef91f67d'
      '196800776222': 'arn:aws:acm:us-east-1:196800776222:certificate/4bad36e0-d971-41e6-a2d8-a897013012be'

Globals:
  Function:
    Runtime: python3.9
    Environment:
      Variables:
        AWS_ACCOUNT_ID: !Sub '${AWS::AccountId}'
        ENVIRONMENT: !Ref Environment
        IS_PROD: !If [ IsProd, 1, 0 ]
        LOGLEVEL: INFO
        SHARED_BUCKET: !If [ IsProd, !Sub 'cdpi-shared-${AWS::Region}-prod', !Sub 'cdpi-shared-${AWS::Region}-test' ]
        DOWNLOAD_QUEUE: !Ref DownloadQueue
        ALERT_CLIENT_ENGINEERING_TOPIC: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering"
        EVENTS_API_URL:
          !If [IsProd, "https://fh3n1vkpn2.execute-api.us-east-1.amazonaws.com/prod", "https://8mdfapric6.execute-api.us-east-1.amazonaws.com/test"]
        FORD_DIRECT_QUEUE_URL:
          !If 
            - IsProd
            - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/cdpi-prod-ford-direct-SendEventToFordDirectQueue"
            - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/cdpi-test-ford-direct-SendEventToFordDirectQueue"

    VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroup
        SubnetIds: !FindInMap [ Subnets, !Ref 'AWS::Region', !Ref 'AWS::AccountId' ]

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DeletionPolicy: Delete
    Properties:
      GroupDescription: Permit traffic from the forddirect cdpi integration
      VpcId: !FindInMap [ VpcId, !Ref 'AWS::Region', !Ref 'AWS::AccountId']
      SecurityGroupEgress:
        - Description: AllowAll
          CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Product
          Value: forddirect-cdpi-integration

  RDSInboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "cdpi forddirect integration rds access"
      GroupId: !If [ IsProd,
                      'sg-00e12bc4c116eb820',
                      'sg-00b911ee260ce5153'
                    ]
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !GetAtt SecurityGroup.GroupId

  LambdaExecutionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for forddirect granting access to AWS resources
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !If [
                  IsProd,
                  !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/DB/application*",
                  !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/DB/application*",
                ]
              - !If [
                   IsProd,
                   !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/FD-Webhook*",
                   !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/FD-Webhook*",
                ]
              - !If [
                   IsProd,
                   !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/FD-SFTP*",
                   !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/FD-SFTP*",
                ]
              - !If [
                   IsProd,
                   !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/FD-PKEY*",
                   !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/FD-PKEY*",
                ]
              - !If [
                   IsProd,
                   !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/event-publishing-api*",
                   !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/event-publishing-api*",
                ]  
              - !If [
                   IsProd,
                   !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/FD-DSR*",
                   !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/FD-DSR*",
                ]             
          - Effect: Allow
            Action:
              - ec2:CreateNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:DeleteNetworkInterface
            Resource: "*"
          - Effect: "Allow"
            Action:
              - s3:*
            Resource:
              - !If [
                IsProd,
                !Sub "arn:aws:s3:::cdpi-shared-${AWS::Region}-prod*",
                !Sub "arn:aws:s3:::cdpi-shared-${AWS::Region}-test*"
              ]
          - Effect: "Allow"
            Action:
              - sns:Publish
            Resource: !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering'
          - Effect: "Allow"
            Action:
              - "sqs:ReceiveMessage"
              - "sqs:SendMessage"
              - "sqs:DeleteMessage"
              - "sqs:GetQueueAttributes"
            Resource:
              - !GetAtt DownloadQueue.Arn
              - !GetAtt SendEventToFordDirectQueue.Arn
          - Effect: "Allow"
            Action:
              - "ssm:GetParameter"
            Resource:
              - !If [
                   IsProd,
                   !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/sqs/prod/*",
                   !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/sqs/test/*",
                ]
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
            Resource:
              - "*"

  InvokePIIOutbound:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub cdpi-${Environment}-ford-direct-InvokePIIOutbound
      Handler: invoke_pii_outbound.lambda_handler
      CodeUri: ./app
      Policies:
        - !Ref LambdaExecutionPolicy
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !GetAtt GeneratePIIOutboundQueue.Arn
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: cron(0 13 * * ? *)
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:3",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:7"
          ]
      Timeout: 30
      Environment:
        Variables:
          GENERATE_PII_QUEUE: !Ref GeneratePIIOutboundQueue

  InvokePIIOutboundAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub cdpi-${Environment}-ford-direct-InvokePIIOutboundAlarm
      AlarmDescription: InvokePIIOutboundAlarm execution failed
      Namespace: AWS/Lambda
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref InvokePIIOutbound
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering

  GeneratePIIOutboundQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-GeneratePIIOutboundQueue
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 60
      RedrivePolicy:
          deadLetterTargetArn: !GetAtt GeneratePIIOutboundDLQ.Arn
          maxReceiveCount: 3

  GeneratePIIOutboundEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt GeneratePIIOutboundQueue.Arn
      MaximumBatchingWindowInSeconds: 0
      FunctionName: !GetAtt GeneratePIIOutbound.Arn

  GeneratePIIOutbound:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub cdpi-${Environment}-ford-direct-GeneratePIIOutbound
      Handler: generate_pii_outbound.lambda_handler
      CodeUri: ./app
      Policies:
        - !Ref LambdaExecutionPolicy
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource: !GetAtt GeneratePIIOutboundQueue.Arn
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:3",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:7"
          ]
      Timeout: 60

  GeneratePIIOutboundDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-GeneratePIIOutboundDLQ
      MessageRetentionPeriod: 1209600

  GeneratePIIOutboundDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub cdpi-${Environment}-ford-direct-GeneratePIIOutboundDLQAlarm
      AlarmDescription: There are over 1 unprocessed messages in the GeneratePIIOutboundDLQ
      ActionsEnabled: !If [ IsProd, true, false ]
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      Dimensions:
        - Name: QueueName
          Value: !GetAtt GeneratePIIOutboundDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      TreatMissingData: notBreaching

  UploadPIIOutboundQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-UploadPIIOutboundQueue
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 300
      RedrivePolicy:
          deadLetterTargetArn: !GetAtt UploadPIIOutboundDLQ.Arn
          maxReceiveCount: 3

  UploadPIIOutboundQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref UploadPIIOutboundQueue
      PolicyDocument:
          Version: '2012-10-17'
          Id: UploadPIIOutboundQueuePolicy
          Statement:
            - Sid: Allow-SNS-SendMessage
              Action:
                - sqs:SendMessage
              Effect: Allow
              Resource: !GetAtt UploadPIIOutboundQueue.Arn
              Principal:
                  Service: sns.amazonaws.com
              Condition:
                  ArnEquals:
                      aws:SourceArn: !If [
                        IsProd,
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-prod-sns-s3-topic-${AWS::Region}",
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-test-sns-s3-topic-${AWS::Region}"
                      ]

  UploadPIIOutbound:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub cdpi-${Environment}-ford-direct-UploadPIIOutbound
      Handler: upload_pii_outbound.lambda_handler
      CodeUri: ./app
      Timeout: 300
      Policies:
        - !Ref LambdaExecutionPolicy
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource: !GetAtt UploadPIIOutboundQueue.Arn
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !If [
                    IsProd,
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/FD-SFTP*",
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/FD-SFTP*"
                  ]
                - !If [
                    IsProd,
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/FD-PKEY*",
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/FD-PKEY*"
                  ]

  UploadPIIOutboundEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt UploadPIIOutboundQueue.Arn
      MaximumBatchingWindowInSeconds: 0
      FunctionName: !GetAtt UploadPIIOutbound.Arn

  UploadPIIOutboundTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !If [
        IsProd,
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-prod-sns-s3-topic-${AWS::Region}",
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-test-sns-s3-topic-${AWS::Region}"
      ]
      Endpoint: !GetAtt UploadPIIOutboundQueue.Arn
      FilterPolicyScope: MessageBody
      FilterPolicy:
        '{"Records":{"s3":{"object":{"key":[{"prefix":"fd-pii-outbound/"}]}},"eventName":[{"prefix":"ObjectCreated:"}]}}'

  UploadPIIOutboundDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-UploadPIIOutboundDLQ

  UploadPIIOutboundDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub cdpi-${Environment}-ford-direct-UploadPIIOutboundDLQAlarm
      AlarmDescription: There are over 1 unprocessed messages in the UploadPIIOutboundDLQ
      ActionsEnabled: !If [ IsProd, true, false ]
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      Dimensions:
        - Name: QueueName
          Value: !GetAtt UploadPIIOutboundDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      TreatMissingData: notBreaching

  ConsumerSummaryBatcherLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "cdpi-${Environment}-ford-direct-ConsumerSummaryBatcher"
      Handler: consumer_summary_batcher.lambda_handler
      CodeUri: app/
      MemorySize: 1024
      Timeout: 300
      Policies:
        - !Ref LambdaExecutionPolicy
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:SendMessage
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource:
                - !GetAtt ConsumerSummaryQueue.Arn
                - !GetAtt ConsumerSummaryBatcherQueue.Arn
      Environment:
        Variables:
          BATCH_SIZE: 1000
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:3",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:6"
          ]

  ConsumerSummaryBatcherLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/cdpi-ford-direct-${Environment}-ConsumerSummaryBatcher"

  ConsumerSummaryBatcherQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "cdpi-${Environment}-ford-direct-ConsumerSummaryBatcher"
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 300
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ConsumerSummaryBatcherDeadLetterQueue.Arn
        maxReceiveCount: 1

  ConsumerSummaryBatcherDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "cdpi-${Environment}-ford-direct-ConsumerSummaryBatcherDLQ"
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 10

  ConsumerSummaryBatcherEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt ConsumerSummaryBatcherQueue.Arn
      MaximumBatchingWindowInSeconds: 0
      FunctionName: !GetAtt ConsumerSummaryBatcherLambda.Arn

  ConsumerSummaryBatcherQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref ConsumerSummaryBatcherQueue
      PolicyDocument:
          Version: '2012-10-17'
          Id: ConsumerSummaryBatcherQueuePolicy
          Statement:
            - Sid: Allow-SNS-SendMessage
              Action:
                - sqs:SendMessage
              Effect: Allow
              Resource: !GetAtt ConsumerSummaryBatcherQueue.Arn
              Principal:
                  Service: sns.amazonaws.com
              Condition:
                  ArnEquals:
                      aws:SourceArn: !If [
                        IsProd,
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-prod-sns-s3-topic-${AWS::Region}",
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-test-sns-s3-topic-${AWS::Region}"
                      ]

  ConsumerSummaryBatcherTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !If [
        IsProd,
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-prod-sns-s3-topic-${AWS::Region}",
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-test-sns-s3-topic-${AWS::Region}"
      ]
      Endpoint: !GetAtt ConsumerSummaryBatcherQueue.Arn
      FilterPolicyScope: MessageBody
      FilterPolicy:
        '{"Records":{"s3":{"object":{"key":[{"prefix":"fd-raw/consumer_profile_summary/"}]}},"eventName":[{"prefix":"ObjectCreated:"}]}}'

  ConsumerSummaryBatcherDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "cdpi-${Environment}-ford-direct-ConsumerSummaryBatcherDLQ"
      AlarmDescription: "Alarm for Consumer Summary Dead Letter Queue"
      ActionsEnabled: true
      Namespace: AWS/SQS
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value: !GetAtt ConsumerSummaryBatcherDeadLetterQueue.QueueName
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      TreatMissingData: notBreaching

  ConsumerSummaryLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "cdpi-${Environment}-ford-direct-ConsumerSummary"
      Handler: consumer_summary.lambda_handler
      CodeUri: app/
      MemorySize: 1024
      Timeout: 60
      Policies:
        - !Ref LambdaExecutionPolicy
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:SendMessage
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource:
                - !GetAtt ConsumerSummaryQueue.Arn
                - !GetAtt ConsumerSummaryBatcherQueue.Arn
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:3",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:6"
          ]

  ConsumerSummaryLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/cdpi-${Environment}-ford-direct-ConsumerSummary"

  ConsumerSummaryQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "cdpi-${Environment}-ford-direct-ConsumerSummary"
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 60
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ConsumerSummaryDeadLetterQueue.Arn
        maxReceiveCount: 2

  ConsumerSummaryDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "cdpi-${Environment}-ford-direct-ConsumerSummaryDLQ"
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 10

  ConsumerSummaryEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt ConsumerSummaryQueue.Arn
      MaximumBatchingWindowInSeconds: 0
      FunctionName: !GetAtt ConsumerSummaryLambda.Arn

  ConsumerSummaryQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref ConsumerSummaryQueue
      PolicyDocument:
          Version: '2012-10-17'
          Id: ConsumerSummaryQueuePolicy
          Statement:
            - Sid: Allow-SNS-SendMessage
              Action:
                - sqs:SendMessage
              Effect: Allow
              Resource: !GetAtt ConsumerSummaryQueue.Arn
              Principal:
                  Service: sns.amazonaws.com
              Condition:
                  ArnEquals:
                      aws:SourceArn: !If [
                        IsProd,
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-prod-sns-s3-topic-${AWS::Region}",
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-test-sns-s3-topic-${AWS::Region}"
                      ]

  ConsumerSummaryTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !If [
        IsProd,
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-prod-sns-s3-topic-${AWS::Region}",
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-test-sns-s3-topic-${AWS::Region}"
      ]
      Endpoint: !GetAtt ConsumerSummaryQueue.Arn
      FilterPolicyScope: MessageBody
      FilterPolicy:
        '{"Records":{"s3":{"object":{"key":[{"prefix":"fd-processed/consumer_profile_summary/"}]}},"eventName":[{"prefix":"ObjectCreated:"}]}}'

  ConsumerSummaryDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "cdpi-${Environment}-ford-direct-ConsumerSummaryDLQ"
      AlarmDescription: "Alarm for Consumer Summarys Dead Letter Queue"
      ActionsEnabled: true
      Namespace: AWS/SQS
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value: !GetAtt ConsumerSummaryDeadLetterQueue.QueueName
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      TreatMissingData: notBreaching

  # INBOUND
  MatchingPIIInbound:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub cdpi-${Environment}-ford-direct-MatchingPIIInbound
      Handler: matching_pii_inbound.lambda_handler
      CodeUri: ./app
      Timeout: 300
      Policies:
        - !Ref LambdaExecutionPolicy
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource: !GetAtt MatchingPIIInboundQueue.Arn
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:3",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:7"
          ]

  MatchingPIIInboundQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-MatchingPIIInboundQueue
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 300
      RedrivePolicy:
          deadLetterTargetArn: !GetAtt MatchingPIIInboundDLQ.Arn
          maxReceiveCount: 3

  MatchingPIIInboundDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-MatchingPIIInboundDLQ
      MessageRetentionPeriod: 1209600

  MatchingPIIInboundQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref MatchingPIIInboundQueue
      PolicyDocument:
          Version: '2012-10-17'
          Id: MatchingPIIInboundQueuePolicy
          Statement:
            - Sid: Allow-SNS-SendMessage
              Action:
                - sqs:SendMessage
              Effect: Allow
              Resource: !GetAtt MatchingPIIInboundQueue.Arn
              Principal:
                  Service: sns.amazonaws.com
              Condition:
                  ArnEquals:
                      aws:SourceArn: !If [
                        IsProd,
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-prod-sns-s3-topic-${AWS::Region}",
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-test-sns-s3-topic-${AWS::Region}"
                      ]

  MatchingPIIInboundDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub cdpi-${Environment}-ford-direct-MatchingPIIInboundDLQAlarm
      AlarmDescription: There are over 1 unprocessed messages in the MatchingPIIInboundDLQ
      ActionsEnabled: !If [ IsProd, true, false ]
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      Dimensions:
        - Name: QueueName
          Value: !GetAtt MatchingPIIInboundDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      TreatMissingData: notBreaching

  MatchingPIIInboundTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !If [
        IsProd,
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-prod-sns-s3-topic-${AWS::Region}",
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-test-sns-s3-topic-${AWS::Region}"
      ]
      Endpoint: !GetAtt MatchingPIIInboundQueue.Arn
      FilterPolicyScope: MessageBody
      FilterPolicy:
        '{"Records":{"s3":{"object":{"key":[{"prefix":"fd-raw/pii_match/"}]}},"eventName":[{"prefix":"ObjectCreated:"}]}}'

  MatchingPIIInboundEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt MatchingPIIInboundQueue.Arn
      MaximumBatchingWindowInSeconds: 0
      FunctionName: !GetAtt MatchingPIIInbound.Arn

  # WEBHOOK

  Authorizer:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "cdpi-${Environment}-ford-direct-WebhookAuthorizer"
      CodeUri: app/
      Handler: authorizer.lambda_handler
      Timeout: 30
      MemorySize: 128
      Policies:
        - !Ref LambdaExecutionPolicy

  FordDirectWebhookAPI:
    Type: 'AWS::Serverless::Api'
    Properties:
      Name: 'FordDirectWebhookAPI'
      Description: 'API for triggering SFTP download via webhook'
      StageName: !Ref Environment
      Auth:
        DefaultAuthorizer: DefaultAuth
        Authorizers:
          DefaultAuth:
            FunctionPayloadType: REQUEST
            FunctionArn: !GetAtt Authorizer.Arn
            Identity:
              Headers:
                - partner_id
                - x_api_key
              Context:
                - resourcePath
              ReauthorizeEvery: 0
      AccessLogSetting:
        DestinationArn: !GetAtt FordDirectWebhookAPILogGroup.Arn
        Format: >-
          {"request_id" : "$context.requestId","api_id" : "$context.apiId","resource_path" : "$context.resourcePath","resource_id" : "$context.resourceId","http_method" : "$context.httpMethod","source_ip" : "$context.identity.sourceIp","user-agent" : "$context.identity.userAgent","account_id" : "$context.identity.accountId","api_key" : "$context.identity.apiKey","caller" : "$context.identity.caller","user" : "$context.identity.user","user_arn" : "$context.identity.userArn"}
      GatewayResponses:
        BAD_REQUEST_PARAMETERS:
          ResponseTemplates:
            application/json: '{"message": "$context.error.validationErrorString"}'
        BAD_REQUEST_BODY:
          ResponseTemplates:
            application/json: '{"message": "$context.error.validationErrorString"}'
        UNAUTHORIZED:
          ResponseTemplates:
            application/json: '{"message": "This request is unauthorized."}'
          StatusCode: "401"
        ACCESS_DENIED:
          ResponseTemplates:
            application/json: '{"message": "$context.authorizer.key"}'
          StatusCode: "403"
        DEFAULT_5xx:
          ResponseTemplates:
            application/json: '{"message": "Internal Server Error. Please contact Impel support."}'

  FordDirectWebhookAPILogGroup:
    Type: AWS::Logs::LogGroup

  SFTPNotifyWebhook:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: app/
      Handler: webhook.lambda_handler
      FunctionName: !Sub cdpi-${Environment}-ford-direct-Webhook
      MemorySize: 128
      Timeout: 30
      Events:
        HttpApi:
          Type: Api
          Properties:
            Path: /sftp-notify
            Method: POST
            RestApiId: !Ref FordDirectWebhookAPI
      Policies:
        - !Ref LambdaExecutionPolicy

  SFTPNotifyWebhookLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/cdpi-${Environment}-ford-direct-Webhook"

  DownloadQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-DownloadQueue
      MessageRetentionPeriod: 1209600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DownloadQueueDLQ.Arn
        maxReceiveCount: 3
      VisibilityTimeout: 900

  DownloadQueueDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-DownloadQueueDLQ
      MessageRetentionPeriod: 1209600

  DownloadFileDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub cdpi-${Environment}-ford-direct-DownloadFileDLQAlarm
      AlarmDescription: There are over 1 unprocessed messages in the DownloadFileDLQ
      ActionsEnabled: !If [ IsProd, true, false ]
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DownloadQueueDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      TreatMissingData: notBreaching

  DownloadFileLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub cdpi-${Environment}-ford-direct-DownloadLambda
      CodeUri: app/
      Handler: download_file.lambda_handler
      Timeout: 900
      MemorySize: 1024
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Enabled: True
            Queue: !GetAtt DownloadQueue.Arn
      Policies:
        - !Ref LambdaExecutionPolicy
  
  DsrOptout:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: app/
      Handler: dsr_optout.lambda_handler
      FunctionName: !Sub cdpi-${Environment}-ford-direct-dsr-output
      MemorySize: 128
      Timeout: 30
      Events:
        HttpApi:
          Type: Api
          Properties:
            RestApiId: !Ref FordDirectWebhookAPI
            Path: /v1/dsr-optout
            Method: POST
      Environment:
        Variables:
          EVENTS_LAMBDA_ARN: !Ref CallEventsAPI
      Policies:
        - !Ref LambdaExecutionPolicy
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:3",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:12"
          ]

  DsrOptoutLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/cdpi-${Environment}-ford-direct-dsr-output"

  DsrDelete:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: app/
      Handler: dsr_delete.lambda_handler
      FunctionName: !Sub cdpi-${Environment}-ford-direct-dsr-delete
      MemorySize: 128
      Timeout: 30
      Events:
        HttpApi:
          Type: Api
          Properties:
            RestApiId: !Ref FordDirectWebhookAPI
            Path: /v1/dsr-delete
            Method: POST
      Environment:
        Variables:
          EVENTS_LAMBDA_ARN: !Ref CallEventsAPI
      Policies:
        - !Ref LambdaExecutionPolicy
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:3",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:12"
          ]

  DsrDeleteLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/cdpi-${Environment}-ford-direct-dsr-delete"

  CallEventsAPI:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: app/
      Handler: call_events_api.lambda_handler
      FunctionName: !Sub cdpi-${Environment}-ford-direct-call-events-api
      MemorySize: 128
      Timeout: 30
      VpcConfig: !Ref "AWS::NoValue"
      Policies:
        - !Ref LambdaExecutionPolicy
  
  CallEventsAPILogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/cdpi-${Environment}-ford-direct-call-events-api"

  # 🚀 EVENT Processing SQS and Lambda
  DsrEventProcessingQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-DsrEventProcessingQueue
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 30
      RedrivePolicy:
          deadLetterTargetArn: !GetAtt DsrEventProcessingQueueDLQ.Arn
          maxReceiveCount: 3
  
  DsrEventProcessingQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref DsrEventProcessingQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: 
                - !If
                  - IsProd
                  - "arn:aws:iam::143813444726:role/EnterpriseBus-prod-CrossAccountRole"
                  - "arn:aws:iam::143813444726:role/EnterpriseBus-test-CrossAccountRole"
            Action: "SQS:SendMessage"
            Resource: !GetAtt DsrEventProcessingQueue.Arn

  DsrEventProcessingQueueDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-DsrEventProcessingQueueDLQ
      MessageRetentionPeriod: 1209600

  DsrEventProcessingLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub cdpi-${Environment}-ford-direct-DsrEventProcessingLambda
      CodeUri: app/
      Handler: dsr_event_processing.lambda_handler
      Timeout: 30
      MemorySize: 128
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Enabled: True
            Queue: !GetAtt DsrEventProcessingQueue.Arn
      Policies:
        - !Ref LambdaExecutionPolicy
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:3",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:12"
          ]
  
  DsrEventProcessingLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/cdpi-${Environment}-ford-direct-DsrEventProcessingLambda"

  DsrEventProcessingQueueDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub cdpi-${Environment}-ford-direct-DsrEventProcessingQueueDLQAlarm
      AlarmDescription: There are over 1 unprocessed messages in the DsrEventProcessingQueueDLQ
      ActionsEnabled: !If [ IsProd, true, false ]
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DsrEventProcessingQueueDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      TreatMissingData: notBreaching

  # 🚀 Send Event To Ford Direct SQS and Lambda
  SendEventToFordDirectQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-SendEventToFordDirectQueue
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 30
      RedrivePolicy:
          deadLetterTargetArn: !GetAtt SendEventToFordDirectDLQ.Arn
          maxReceiveCount: 3

  SendEventToFordDirectDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-${Environment}-ford-direct-SendEventToFordDirectDLQ
      MessageRetentionPeriod: 1209600

  SendEventToFordDirectLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub cdpi-${Environment}-ford-direct-SendEventToFordDirectLambda
      CodeUri: app/
      Handler: send_event_to_fd.lambda_handler
      Timeout: 30
      MemorySize: 128
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Enabled: True
            Queue: !GetAtt SendEventToFordDirectQueue.Arn
      Policies:
        - !Ref LambdaExecutionPolicy
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:3",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:12"
          ]

  SendEventToFordDirectLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/cdpi-${Environment}-ford-direct-SendEventToFordDirectLambda"

  SendEventToFordDirectDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub cdpi-${Environment}-ford-direct-SendEventToFordDirectDLQAlarm
      AlarmDescription: There are over 1 unprocessed messages in the SendEventToFordDirectDLQ
      ActionsEnabled: !If [ IsProd, true, false ]
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      Dimensions:
        - Name: QueueName
          Value: !GetAtt SendEventToFordDirectDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      TreatMissingData: notBreaching