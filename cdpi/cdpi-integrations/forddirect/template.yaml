AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Ford Direct CDPI resources

Parameters:
  Environment:
    Description: The name of the runtime environment
    Type: String
    AllowedPattern: '^[a-zA-z0-9-]+$'
    ConstraintDescription: Must contain only lowercase, uppercase, numbers, or hyphens

Conditions:
  IsProd:
    Fn::Equals:
    - Ref: AWS::AccountId
    - 196800776222
  IsUsEast1: !Equals [ !Ref 'AWS::Region', 'us-east-1' ]


Mappings:
  Subnets:
    us-east-1:
      '196800776222':
        - subnet-0d29a385efe83bf1c
        - subnet-0e88ecdd743701e96
        - subnet-00291e028e21cb78f
        - subnet-0b1555d5fa3c8ba8e
      '143813444726':
        - subnet-030d57e39ec0df603
        - subnet-01044d580678ea63c
        - subnet-0b29db0aeb6cdabec
        - subnet-0e28d592f2ca28fb7
  VpcId:
    us-east-1:
      '196800776222': vpc-03417e688cee5bc07
      '143813444726': vpc-0b28df8980a1905d5
  SslCertificates:
    us-east-1:
      '143813444726': 'arn:aws:acm:us-east-1:143813444726:certificate/9f026b43-c690-4434-93e1-9be4ef91f67d'
      '196800776222': 'arn:aws:acm:us-east-1:196800776222:certificate/4bad36e0-d971-41e6-a2d8-a897013012be'

Globals:
  Function:
    Runtime: python3.9
    Environment:
      Variables:
        AWS_ACCOUNT_ID: !Sub '${AWS::AccountId}'
        ENVIRONMENT: !Ref Environment
        IS_PROD: !If [ IsProd, 1, 0 ]
        LOGLEVEL: INFO
        SHARED_BUCKET: !If [ IsProd, !Sub 'cdpi-shared-${AWS::Region}-prod', !Sub 'cdpi-shared-${AWS::Region}-test' ]
    VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroup
        SubnetIds: !FindInMap [ Subnets, !Ref 'AWS::Region', !Ref 'AWS::AccountId' ]

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DeletionPolicy: Delete
    Properties:
      GroupDescription: Permit traffic from the forddirect cdpi integration
      VpcId: !FindInMap [ VpcId, !Ref 'AWS::Region', !Ref 'AWS::AccountId']
      SecurityGroupEgress:
        - Description: AllowAll
          CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Product
          Value: forddirect-cdpi-integration

  RDSInboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "cdpi forddirect integration rds access"
      GroupId: !If [ IsProd,
                      'sg-00e12bc4c116eb820',
                      'sg-00b911ee260ce5153'
                    ]
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !GetAtt SecurityGroup.GroupId

  LambdaExecutionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for forddirect granting access to AWS resources
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !If [
                  IsProd,
                  !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/DB/application*",
                  !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/DB/application*",
                ]
          - Effect: Allow
            Action:
              - ec2:CreateNetworkInterface
              - ec2:DescribeNetworkInterfaces
              - ec2:DeleteNetworkInterface
            Resource: "*"
          - Effect: "Allow"
            Action:
              - s3:*
            Resource:
              - !If [
                IsProd,
                !Sub "arn:aws:s3:::cdpi-shared-${AWS::Region}-prod*",
                !Sub "arn:aws:s3:::cdpi-shared-${AWS::Region}-test*"
              ]

  InvokePIIOutbound:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub cdpi-ford-direct-InvokePIIOutbound-${Environment}
      Handler: invoke_pii_outbound.lambda_handler
      CodeUri: ./app
      Policies:
        - !Ref LambdaExecutionPolicy
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !GetAtt GeneratePIIOutboundQueue.Arn
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: cron(0 12 * * ? *)
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:1",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:7"
          ]
      Timeout: 30
      Environment:
        Variables:
          GENERATE_PII_QUEUE: !Ref GeneratePIIOutboundQueue

  InvokePIIOutboundAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub cdpi-ford-direct-InvokePIIOutboundAlarm-${Environment}
      AlarmDescription: InvokePIIOutboundAlarm execution failed
      Namespace: AWS/Lambda
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref InvokePIIOutbound
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering

  GeneratePIIOutboundQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-ford-direct-GeneratePIIOutboundQueue-${Environment}
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 60
      RedrivePolicy:
          deadLetterTargetArn: !GetAtt GeneratePIIOutboundDLQ.Arn
          maxReceiveCount: 3

  GeneratePIIOutboundEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt GeneratePIIOutboundQueue.Arn
      MaximumBatchingWindowInSeconds: 0
      FunctionName: !GetAtt GeneratePIIOutbound.Arn

  GeneratePIIOutbound:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub cdpi-ford-direct-GeneratePIIOutbound-${Environment}
      Handler: generate_pii_outbound.lambda_handler
      CodeUri: ./app
      Policies:
        - !Ref LambdaExecutionPolicy
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource: !GetAtt GeneratePIIOutboundQueue.Arn
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:1",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:7"
          ]
      Timeout: 60

  GeneratePIIOutboundDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-ford-direct-GeneratePIIOutboundDLQ-${Environment}

  GeneratePIIOutboundDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub cdpi-ford-direct-GeneratePIIOutboundDLQAlarm-${Environment}
      AlarmDescription: There are over 1 unprocessed messages in the GeneratePIIOutboundDLQ
      ActionsEnabled: !If [ IsProd, true, false ]
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      Dimensions:
        - Name: QueueName
          Value: !GetAtt GeneratePIIOutboundDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      TreatMissingData: notBreaching

  UploadPIIOutboundQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-ford-direct-UploadPIIOutboundQueue-${Environment}
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 300
      RedrivePolicy:
          deadLetterTargetArn: !GetAtt UploadPIIOutboundDLQ.Arn
          maxReceiveCount: 3

  UploadPIIOutboundQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref UploadPIIOutboundQueue
      PolicyDocument:
          Version: '2012-10-17'
          Id: UploadPIIOutboundQueuePolicy
          Statement:
            - Sid: Allow-SNS-SendMessage
              Action:
                - sqs:SendMessage
              Effect: Allow
              Resource: !GetAtt UploadPIIOutboundQueue.Arn
              Principal:
                  Service: sns.amazonaws.com
              Condition:
                  ArnEquals:
                      aws:SourceArn: !If [
                        IsProd,
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-prod",
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-test"
                      ]

  UploadPIIOutbound:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub cdpi-ford-direct-UploadPIIOutbound-${Environment}
      Handler: upload_pii_outbound.lambda_handler
      CodeUri: ./app
      Timeout: 300
      Policies:
        - !Ref LambdaExecutionPolicy
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource: !GetAtt UploadPIIOutboundQueue.Arn
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !If [
                    IsProd,
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/FD-SFTP*",
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/FD-SFTP*"
                  ]
                - !If [
                    IsProd,
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/FD-PKEY*",
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/FD-PKEY*"
                  ]

  UploadPIIOutboundEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt UploadPIIOutboundQueue.Arn
      MaximumBatchingWindowInSeconds: 0
      FunctionName: !GetAtt UploadPIIOutbound.Arn

  UploadPIIOutboundTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !If [
        IsProd,
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-prod",
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-test"
      ]
      Endpoint: !GetAtt UploadPIIOutboundQueue.Arn
      FilterPolicyScope: MessageBody
      FilterPolicy:
        '{"Records":{"s3":{"object":{"key":[{"prefix":"fd-pii-outbound/"}]}},"eventName":[{"prefix":"ObjectCreated:"}]}}'

  UploadPIIOutboundDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-ford-direct-UploadPIIOutboundDLQ-${Environment}

  UploadPIIOutboundDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub cdpi-ford-direct-UploadPIIOutboundDLQAlarm-${Environment}
      AlarmDescription: There are over 1 unprocessed messages in the UploadPIIOutboundDLQ
      ActionsEnabled: !If [ IsProd, true, false ]
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      Dimensions:
        - Name: QueueName
          Value: !GetAtt UploadPIIOutboundDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      TreatMissingData: notBreaching



# INBOUND
  MatchingPIIInbound:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub cdpi-ford-direct-MatchingPIIInbound-${Environment}
      Handler: matching_pii_inbound.lambda_handler
      CodeUri: ./app
      Timeout: 300
      Policies:
        - !Ref LambdaExecutionPolicy
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource: !GetAtt MatchingPIIInboundQueue.Arn
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !If [
                    IsProd,
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/FD-SFTP*",
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/FD-SFTP*"
                  ]
                - !If [
                    IsProd,
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:prod/CDPI/FD-PKEY*",
                    !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:test/CDPI/FD-PKEY*"
                  ]
      Layers:
        - !If [
            IsProd,
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-prod:1",
            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:cdpi_orm_layer-test:7"
          ]
          
  MatchingPIIInboundQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-ford-direct-MatchingPIIInboundQueue-${Environment}
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 300
      RedrivePolicy:
          deadLetterTargetArn: !GetAtt MatchingPIIInboundDLQ.Arn
          maxReceiveCount: 3

  MatchingPIIInboundDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub cdpi-ford-direct-MatchingPIIInboundDLQ-${Environment}

  MatchingPIIInboundQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref MatchingPIIInboundQueue
      PolicyDocument:
          Version: '2012-10-17'
          Id: MatchingPIIInboundQueuePolicy
          Statement:
            - Sid: Allow-SNS-SendMessage
              Action:
                - sqs:SendMessage
              Effect: Allow
              Resource: !GetAtt MatchingPIIInboundQueue.Arn
              Principal:
                  Service: sns.amazonaws.com
              Condition:
                  ArnEquals:
                      aws:SourceArn: !If [
                        IsProd,
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-prod",
                        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-test"
                      ]

  MatchingPIIInboundDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub cdpi-ford-direct-MatchingPIIInboundDLQAlarm-${Environment}
      AlarmDescription: There are over 1 unprocessed messages in the MatchingPIIInboundDLQ
      ActionsEnabled: !If [ IsProd, true, false ]
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:alert_client_engineering
      Dimensions:
        - Name: QueueName
          Value: !GetAtt MatchingPIIInboundDLQ.QueueName
      EvaluationPeriods: 1
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      TreatMissingData: notBreaching

  MatchingPIIInboundTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !If [
        IsProd,
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-prod",
        !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:cdpi-shared-sns-s3-topic-${AWS::Region}-test"
      ]
      Endpoint: !GetAtt MatchingPIIInboundQueue.Arn
      FilterPolicyScope: MessageBody
      FilterPolicy:
        '{"Records":{"s3":{"object":{"key":[{"prefix":"customer-inbound/"}]}},"eventName":[{"prefix":"ObjectCreated:"}]}}'

  MatchingPIIInboundEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt MatchingPIIInboundQueue.Arn
      MaximumBatchingWindowInSeconds: 0
      FunctionName: !GetAtt MatchingPIIInbound.Arn