"""AuditLog Model."""

from sqlalchemy import Column, DateTime, Integer, String
from sqlalchemy.types import ARRAY
from typing import Dict, Any
from cdpi_orm.session_config import BaseForModels
from sqlalchemy.dialects.postgresql import JSONB
from sqlalchemy.ext.mutable import MutableDict


class AuditLog(BaseForModels):  # type: ignore
    """AuditLog Model."""

    __tablename__ = "cdpi_audit_log"

    id = Column(Integer, primary_key=True, autoincrement=True)
    table_name = Column(String)
    operation = Column(String)
    row_id = Column(Integer)
    changed_columns = Column(ARRAY(String))
    old_values = Column(MutableDict.as_mutable(JSONB))
    new_values = Column(MutableDict.as_mutable(JSONB))

    db_update_role = Column(String)
    db_update_date = Column(DateTime)

    def as_dict(self) -> Dict[str, Any]:
        """Return attributes of the keys in the table."""
        return {
            key.name: getattr(self, key.name)
            for key in self.__table__.columns
        }
