"""AuditDsr Model."""

from sqlalchemy import Column, DateTime, Integer, String, ForeignKey, Boolean
from typing import Dict, Any
from cdpi_orm.session_config import BaseForModels
from sqlalchemy.orm import relationship
from cdpi_orm.models.consumer import Consumer
from cdpi_orm.models.integration_partner import IntegrationPartner

class AuditDsr(BaseForModels):
    """AuditDsr Model."""

    __tablename__ = "cdpi_audit_dsr"

    id = Column(Integer, primary_key=True, autoincrement=True)
    consumer_id = Column(Integer, ForeignKey("cdpi_consumer.id"))
    consumer = relationship(Consumer)
    integration_partner_id = Column(Integer, ForeignKey("cdpi_integration_partner.id"))
    integration_partner = relationship(IntegrationPartner)
    dsr_request_type = Column(String)
    complete_flag = Column(Boolean)
    request_date = Column(DateTime)
    complete_date = Column(DateTime)

    def as_dict(self) -> Dict[str, Any]:
        """Return attributes of the keys in the table."""
        return {
            key.name: getattr(self, key.name)
            for key in self.__table__.columns
        }
