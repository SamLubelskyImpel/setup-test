"""Dealer Integration Partner Model."""

from sqlalchemy import Boolean, Column, DateTime, ForeignKey, Integer, String
from sqlalchemy.orm import relationship
from typing import Dict, Any
from cdpi_orm.session_config import BaseForModels
from cdpi_orm.models.integration_partner import IntegrationPartner


class DealerIntegrationPartner(BaseForModels):  # type: ignore
    """Dealer Integration Partner Model."""

    __tablename__ = "cdpi_dealer_integration_partner"

    id = Column(Integer, primary_key=True, autoincrement=True)
    integration_partner_id = Column(Integer, ForeignKey("cdpi_integration_partner.id"))
    integration_partner = relationship(IntegrationPartner)

    dealer_id = Column(Integer, ForeignKey("cdpi_dealer.id"))
    cdp_dealer_id = Column(String)
    is_active = Column(Boolean, default=True)
    db_update_date = Column(DateTime)
    db_creation_date = Column(DateTime)

    def as_dict(self) -> Dict[str, Any]:
        """Return attributes of the keys in the table."""
        return {
            key.name: getattr(self, key.name)
            for key in self.__table__.columns
        }
