"""ConsumerIdentity Model."""

from sqlalchemy import Boolean, Column, ForeignKey, DateTime, Integer, String
from sqlalchemy.orm import relationship
from typing import Dict, Any
from cdpi_orm.session_config import BaseForModels
from cdpi_orm.models.dealer_integration_partner import DealerIntegrationPartner
from cdpi_orm.models.product import Product
from cdpi_orm.models.consumer_profile import ConsumerProfile


class ConsumerIdentity(BaseForModels):  # type: ignore
    """ConsumerIdentity Model."""

    __tablename__ = "cdpi_consumer_identity"

    id = Column(Integer, primary_key=True, autoincrement=True)
    dealer_integration_partner_id = Column(Integer, ForeignKey("cdpi_dealer_integration_partner.id"))
    dealer_integration_partner = relationship(DealerIntegrationPartner)

    product_id = Column(Integer, ForeignKey("cdpi_product.id"))
    product = relationship(Product)

    consumer_profile_id = Column(Integer, ForeignKey("cdpi_consumer_profile.id"))
    consumer_profile = relationship(ConsumerProfile)

    source_consumer_id = Column(String)
    data_load_date = Column(DateTime)
    first_name = Column(String)
    last_name = Column(String)
    email = Column(String)
    phone = Column(String)
    email_optin_flag = Column(Boolean)
    phone_optin_flag = Column(Boolean)
    sms_optin_flag = Column(Boolean)
    address_line_1 = Column(String)
    address_line_2 = Column(String)
    city = Column(String)
    zip = Column(String)
    zipextra = Column(String)
    country = Column(String)
    suite = Column(String)
    areatype = Column(String)
    area = Column(String)
    pobox = Column(String)
    hh_id = Column(String)

    db_update_date = Column(DateTime)
    db_creation_date = Column(DateTime)

    def as_dict(self) -> Dict[str, Any]:
        """Return attributes of the keys in the table."""
        return {
            key.name: getattr(self, key.name)
            for key in self.__table__.columns
        }
