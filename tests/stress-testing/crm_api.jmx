<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="build-web-test-plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="CRM_API">
        <stringProp name="TestPlan.comments">Virtual Users Running CRM API</stringProp>
        <intProp name="ThreadGroup.num_threads">100</intProp>
        <intProp name="ThreadGroup.ramp_time">20</intProp>
        <longProp name="ThreadGroup.duration">30</longProp>
        <longProp name="ThreadGroup.delay">5</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <stringProp name="TestPlan.comments">Notice Timeouts:
Read to 30s
Connect to 5s</stringProp>
          <intProp name="HTTPSampler.connect_timeout">5000</intProp>
          <intProp name="HTTPSampler.response_timeout">30000</intProp>
          <stringProp name="HTTPSampler.domain">448v0pamtb.execute-api.us-east-1.amazonaws.com</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.implementation"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value"> Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:48.0) Gecko/20100101 Firefox/48.0</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value"> text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
            </elementProp>
            <elementProp name="Accept-Language" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value"> fr,en-US;q=0.7,en;q=0.3</stringProp>
            </elementProp>
            <elementProp name="Accept-Encoding" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value"> gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">partner_id</stringProp>
              <stringProp name="Header.value">test</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">x_api_key</stringProp>
              <stringProp name="Header.value">test_6d6407b333e04fbaa42e7ca6549ff0dd</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Random Controller" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create consumer" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/consumers?dealer_id=tekion-test-dealer</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;crm_consumer_id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;first_name&quot;: &quot;Stress&quot;,&#xd;
  &quot;last_name&quot;: &quot;Testing&quot;,&#xd;
  &quot;middle_name&quot;: &quot;&quot;,&#xd;
  &quot;email&quot;: &quot;test@test.com&quot;,&#xd;
  &quot;phone&quot;: &quot;+11231231134&quot;,&#xd;
  &quot;email_optin_flag&quot;: false,&#xd;
  &quot;sms_optin_flag&quot;: false,&#xd;
  &quot;city&quot;: &quot;New York&quot;,&#xd;
  &quot;country&quot;: &quot;USA&quot;,&#xd;
  &quot;address&quot;: &quot;123 Main St, Apt 4B&quot;,&#xd;
  &quot;postal_code&quot;: &quot;10001&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create lead" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/leads</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;consumer_id&quot;: 6776,&#xd;
	&quot;crm_lead_id&quot;: &quot;${__UUID()}&quot;,&#xd;
	&quot;lead_ts&quot;: &quot;2023-09-22T14:00:00Z&quot;,&#xd;
	&quot;lead_status&quot;: &quot;ACTIVE&quot;,&#xd;
	&quot;lead_substatus&quot;: &quot;Appointment Set&quot;,&#xd;
	&quot;lead_comment&quot;: &quot;Does this car have a sunroof?&quot;,&#xd;
	&quot;lead_origin&quot;: &quot;INTERNET&quot;,&#xd;
	&quot;lead_source&quot;: &quot;cars.com&quot;,&#xd;
	&quot;lead_source_detail&quot;: &quot;Inventory Leads Website&quot;,&#xd;
	&quot;vehicles_of_interest&quot;: [&#xd;
		{&#xd;
			&quot;vin&quot;: &quot;1HGBH41JXMN109186&quot;,&#xd;
			&quot;stock_number&quot;: &quot;SN12345&quot;,&#xd;
			&quot;type&quot;: &quot;SUV&quot;,&#xd;
			&quot;class&quot;: &quot;Compact&quot;,&#xd;
			&quot;mileage&quot;: 50000,&#xd;
			&quot;year&quot;: 2023,&#xd;
			&quot;make&quot;: &quot;Ford&quot;,&#xd;
			&quot;model&quot;: &quot;F-150&quot;,&#xd;
			&quot;oem_name&quot;: &quot;Ford&quot;,&#xd;
			&quot;trim&quot;: &quot;GT&quot;,&#xd;
			&quot;body_style&quot;: &quot;SUV&quot;,&#xd;
			&quot;transmission&quot;: &quot;Manual&quot;,&#xd;
			&quot;interior_color&quot;: &quot;Black&quot;,&#xd;
			&quot;exterior_color&quot;: &quot;White&quot;,&#xd;
			&quot;price&quot;: 25000,&#xd;
			&quot;status&quot;: &quot;Available&quot;,&#xd;
			&quot;condition&quot;: &quot;Used&quot;,&#xd;
			&quot;odometer_units&quot;: &quot;miles&quot;,&#xd;
			&quot;vehicle_comments&quot;: &quot;Has a scratch&quot;,&#xd;
			&quot;trade_in_vin&quot;: &quot;1HGBH41JXMN109186&quot;,&#xd;
			&quot;trade_in_year&quot;: 2021,&#xd;
			&quot;trade_in_make&quot;: &quot;Ford&quot;,&#xd;
			&quot;trade_in_model&quot;: &quot;F-150&quot;,&#xd;
			&quot;metadata&quot;: {&#xd;
				&quot;min_price&quot;: 25000,&#xd;
				&quot;max_price&quot;: 30000&#xd;
			},&#xd;
			&quot;crm_vehicle_id&quot;: &quot;8EEAD89E-E89&quot;&#xd;
		}&#xd;
	],&#xd;
	&quot;salespersons&quot;: [&#xd;
		{&#xd;
			&quot;crm_salesperson_id&quot;: &quot;ceab3955-e298-4189-980e-f5f7e620ab611182439&quot;,&#xd;
			&quot;first_name&quot;: &quot;Monika&quot;,&#xd;
			&quot;last_name&quot;: &quot;Rivard&quot;,&#xd;
			&quot;email&quot;: &quot;fake@email.com&quot;,&#xd;
			&quot;phone&quot;: &quot;&quot;,&#xd;
			&quot;position_name&quot;: &quot;BDC Rep&quot;,&#xd;
			&quot;is_primary&quot;: true&#xd;
		},&#xd;
		{&#xd;
			&quot;crm_salesperson_id&quot;: &quot;ceab3955-e298-4189-980e-f5f7e620ab63&quot;,&#xd;
			&quot;first_name&quot;: &quot;Monika&quot;,&#xd;
			&quot;last_name&quot;: &quot;Rivard&quot;,&#xd;
			&quot;email&quot;: &quot;fake@email.com&quot;,&#xd;
			&quot;phone&quot;: &quot;&quot;,&#xd;
			&quot;position_name&quot;: &quot;BDC Rep&quot;,&#xd;
			&quot;is_primary&quot;: true&#xd;
		}&#xd;
	],&#xd;
	&quot;metadata&quot;: {&#xd;
		&quot;dealer_id&quot;: &quot;2173600&quot;,&#xd;
		&quot;build_and_quote_url&quot;: &quot;https://s3.amazonaws.com/eosstatic/generated/pdf/537a56e411a13db11f3c9869/QuoteJFM0L.pdf&quot;&#xd;
	}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create activity" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/activities?lead_id=448853</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;activity_type&quot;: &quot;appointment&quot;,&#xd;
    &quot;activity_due_ts&quot;: &quot;2023-09-22T14:00:00Z&quot;,&#xd;
    &quot;activity_requested_ts&quot;: &quot;2023-09-22T12:00:00Z&quot;,&#xd;
    &quot;notes&quot;: &quot;An appointment&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update activity" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/activities/6653</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;crm_activity_id&quot;: &quot;12345&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update lead" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/leads/381466</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;metadata&quot;: {&#xd;
    &quot;crmLeadStatus&quot;: &quot;Active&quot;,&#xd;
    &quot;appraisalLink&quot;: &quot;https://abc2345.com&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Retrieve consumer by crm id" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/consumers/crm/123abc-1234ab-123abcde?dealer_id=tekion-test-dealer&amp;integration_partner_name=TEKION&amp;crm_dealer_id=techmotors_4_0</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Retrieve consumer" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/consumers/6776</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get lead" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/leads/448853</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get lead by crm id" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/leads/crm/123abc-1234ab-123abcde?dealer_id=tekion-test-dealer&amp;integration_partner_name=TEKION&amp;crm_dealer_id=techmotors_4_0</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get lead activities" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/leads/448853/activities</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get lead salesperson" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/leads/448853/salespersons</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get lead status" enabled="true">
            <stringProp name="HTTPSampler.path">/matheus-nearsure-ce-1538/leads/448853/status</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
