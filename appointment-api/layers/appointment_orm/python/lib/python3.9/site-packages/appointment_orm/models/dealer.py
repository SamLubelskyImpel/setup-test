"""Dealer Model."""

from sqlalchemy import Column, DateTime, Integer, String
from sqlalchemy.dialects.postgresql import JSONB
from sqlalchemy.ext.mutable import MutableDict
from typing import Dict, Any
from appointment_orm.session_config import BaseForModels


class Dealer(BaseForModels):  # type: ignore
    """Dealer Model."""

    __tablename__ = "appt_dealer"

    id = Column(Integer, primary_key=True, autoincrement=True)
    dealer_name = Column(String)
    dealer_location_name = Column(String)
    country = Column(String)
    state = Column(String)
    city = Column(String)
    zip_code = Column(String)
    timezone = Column(String)
    metadata_ = Column("metadata", MutableDict.as_mutable(JSONB))  # type: ignore
    db_update_role = Column(String)
    db_creation_date = Column(DateTime)
    db_update_date = Column(DateTime)

    def as_dict(self) -> Dict[str, Any]:
        """Return attributes of the keys in the table."""
        return {
            key.name: getattr(self, key.name)
            for key in self.__table__.columns
        }
