"""Vehicle Model."""

from sqlalchemy import Column, Integer, String, ForeignKey, DateTime
from sqlalchemy.dialects.postgresql import JSONB
from sqlalchemy.ext.mutable import MutableDict
from typing import Dict, Any
from appt_orm.session_config import BaseForModels


class Vehicle(BaseForModels):   # type: ignore
    """Vehicle Model."""

    __tablename__ = "appt_vehicle"

    id = Column(Integer, primary_key=True, autoincrement=True)
    consumer_id = Column(Integer, ForeignKey("appt_consumer.id"))
    vin = Column(String, unique=True)
    integration_vehicle_id = Column(String)
    vehicle_class = Column(String)
    mileage = Column(Integer)
    make = Column(String)
    model = Column(String)
    manufactured_year = Column(Integer)
    body_style = Column(String)
    transmission = Column(String)
    exterior_color = Column(String)
    interior_color = Column(String)
    trim = Column(String)
    condition = Column(String)
    odometer_units = Column(String)
    metadata_ = Column("metadata", MutableDict.as_mutable(JSONB))  # type: ignore
    db_update_role = Column(String)
    db_creation_date = Column(DateTime)
    db_update_date = Column(DateTime)

    def as_dict(self) -> Dict[str, Any]:
        """Return attributes of the keys in the table."""
        return {
            key.name: getattr(self, key.name)
            for key in self.__table__.columns
        }
