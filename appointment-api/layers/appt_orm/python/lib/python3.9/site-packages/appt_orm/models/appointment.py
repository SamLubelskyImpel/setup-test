"""Appointment Model."""

from sqlalchemy import Column, Integer, String, DateTime, ForeignKey
from sqlalchemy.dialects.postgresql import JSONB
from sqlalchemy.ext.mutable import MutableDict
from typing import Dict, Any
from appt_orm.session_config import BaseForModels


class Appointment(BaseForModels):  # type: ignore
    """Appointment Model."""

    __tablename__ = "appt_appointment"

    id = Column(Integer, primary_key=True, autoincrement=True)
    integration_appointment_id = Column(Integer)
    consumer_id = Column(Integer, ForeignKey("appt_consumer.id"))
    vehicle_id = Column(Integer, ForeignKey("appt_vehicle.id"))
    op_code_appointment_id = Column(Integer, ForeignKey("appt_op_code_appointment.id"))
    timeslot_ts = Column(DateTime)
    timeslot_duration = Column(Integer)
    created_date_ts = Column(DateTime)
    status = Column(String)
    comment = Column(String)
    metadata_ = Column("metadata", MutableDict.as_mutable(JSONB))  # type: ignore
    db_update_role = Column(String)
    db_creation_date = Column(DateTime)
    db_update_date = Column(DateTime)

    def as_dict(self) -> Dict[str, Any]:
        """Return attributes of the keys in the table."""
        return {
            key.name: getattr(self, key.name)
            for key in self.__table__.columns
        }
